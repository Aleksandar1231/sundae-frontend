{
	"id": "68f5e5c18c4a57b58002513c80ed36b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Super-Zap.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-01-31\r\n*/\r\n\r\n// Sources flattened with hardhat v2.6.8 https://hardhat.org\r\n\r\n// File @openzeppelin/contracts-old/token/ERC20/IERC20.sol@v3.0.0\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts-old/math/SafeMath.sol@v3.0.0\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts-old/utils/Address.sol@v3.0.0\r\n\r\npragma solidity ^0.6.2;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts-old/token/ERC20/SafeERC20.sol@v3.0.0\r\n\r\npragma solidity ^0.6.0;\r\n\r\n\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves.\r\n\r\n        // A Solidity high level call has three parts:\r\n        //  1. The target address is checked to verify it contains contract code\r\n        //  2. The call itself is made, and success asserted\r\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\r\n        // solhint-disable-next-line max-line-length\r\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = address(token).call(data);\r\n        require(success, \"SafeERC20: low-level call failed\");\r\n\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File contracts/utils/ContractGuard.sol\r\n\r\npragma solidity 0.6.12;\r\n\r\ncontract ContractGuard {\r\n    mapping(uint256 => mapping(address => bool)) private _status;\r\n\r\n    function checkSameOriginReentranted() internal view returns (bool) {\r\n        return _status[block.number][tx.origin];\r\n    }\r\n\r\n    function checkSameSenderReentranted() internal view returns (bool) {\r\n        return _status[block.number][msg.sender];\r\n    }\r\n\r\n    modifier onlyOneBlock() {\r\n        require(!checkSameOriginReentranted(), \"ContractGuard: one block, one function\");\r\n        require(!checkSameSenderReentranted(), \"ContractGuard: one block, one function\");\r\n\r\n        _;\r\n\r\n        _status[block.number][tx.origin] = true;\r\n        _status[block.number][msg.sender] = true;\r\n    }\r\n}\r\n\r\n\r\n// File contracts/SuperZap.sol\r\n\r\npragma solidity 0.6.12;\r\ninterface IZapper {\r\n    function zapTokenToLP(address _from, uint256 amount, address _to) external;\r\n}\r\n\r\ncontract SuperZap is ContractGuard {\r\n    using SafeERC20 for IERC20;\r\n    using Address for address;\r\n    using SafeMath for uint256;\r\n\r\n    IZapper public zapper;\r\n    IERC20 public fudge;\r\n    IERC20 public straw;\r\n    IERC20 public fudgePair;\r\n    IERC20 public strawPair;\r\n    address public operator;\r\n    uint256 public minStraw;\r\n    uint256 public minFudge;\r\n\r\n    constructor(address _zapper, address _fudge, address _straw, address _fudgePair, address _strawPair) public {\r\n        zapper = IZapper(_zapper);\r\n        fudge = IERC20(_fudge);\r\n        straw = IERC20(_straw);\r\n        fudgePair = IERC20(_fudgePair);\r\n        strawPair = IERC20(_strawPair);\r\n        operator = msg.sender;\r\n        minStraw = 0.0005 * 1e18;\r\n        minFudge = 1e18;\r\n\r\n        fudge.approve(address(zapper), type(uint256).max);\r\n        straw.approve(address(zapper), type(uint256).max);\r\n    }\r\n\r\n    modifier onlyOperator() {\r\n        require(operator == msg.sender, \"SuperZap: caller is not the operator\");\r\n        _;\r\n    }\r\n\r\n    function setMins(uint256 _minStraw, uint256 _minFudge) external onlyOperator {\r\n        minStraw = _minStraw;\r\n        minFudge = _minFudge;\r\n    }\r\n\r\n    function approveZapper(address asset) external onlyOperator {\r\n        IERC20(asset).approve(address(zapper), type(uint256).max);\r\n    }\r\n\r\n    function withdraw(address asset) external onlyOperator {\r\n        if (asset != address(0))\r\n            IERC20(asset).safeTransfer(msg.sender, IERC20(asset).balanceOf(address(this)));\r\n        else\r\n            payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    function _checkMin(address from, uint256 amount) internal view returns (bool) {\r\n        return from == address(fudge) ? amount >= minFudge : amount >= minStraw;\r\n    }\r\n\r\n    function zapStrategy(address from, uint256 amount, uint256 percentFudgeLP) external returns (uint256, uint256) {\r\n        require(percentFudgeLP <= 100, \"Invalid FUDGE-DAI-LP percent\");\r\n        require(IERC20(from).balanceOf(msg.sender) >= amount, \"Insufficient balance\");\r\n        IERC20(from).safeTransferFrom(msg.sender, address(this), amount);\r\n\r\n        uint256 amountFudgePair = percentFudgeLP < 100 ? amount.mul(percentFudgeLP).div(100) : amount;\r\n        uint256 amountStrawPair = amount.sub(amountFudgePair);\r\n\r\n        uint256 prevFudgeLP = fudgePair.balanceOf(address(this));\r\n        uint256 prevStrawLP = strawPair.balanceOf(address(this));\r\n        \r\n        if (_checkMin(from, amountFudgePair)) {\r\n            zapper.zapTokenToLP(from, amountFudgePair, address(fudgePair));\r\n        } else {\r\n            IERC20(from).safeTransfer(msg.sender, amountFudgePair);\r\n        }\r\n        if (_checkMin(from, amountStrawPair)) {\r\n            zapper.zapTokenToLP(from, amountStrawPair, address(strawPair));\r\n        } else {\r\n            IERC20(from).safeTransfer(msg.sender, amountStrawPair);\r\n        }\r\n\r\n        uint256 zappedFudgeLP = fudgePair.balanceOf(address(this)).sub(prevFudgeLP);\r\n        uint256 zappedStrawLP = strawPair.balanceOf(address(this)).sub(prevStrawLP);\r\n        \r\n        if (zappedFudgeLP > 0)\r\n            fudgePair.safeTransfer(msg.sender,  zappedFudgeLP);\r\n        if (zappedStrawLP > 0)\r\n            strawPair.safeTransfer(msg.sender,  zappedStrawLP);\r\n            \r\n        return (zappedFudgeLP, zappedStrawLP);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Super-Zap.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Super-Zap.sol\":8538:11102  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Super-Zap.sol\":8538:11102  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200c68861bf64e61f829eb0c0e35cd06e7ca952ca0e48649f4c4cfa6a819e5cbe664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c68861bf64e61f829eb0c0e35cd06e7ca952ca0e48649f4c4cfa6a819e5cbe664736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC PUSH9 0x861BF64E61F829EB0C 0xE CALLDATALOAD 0xCD MOD 0xE7 0xCA SWAP6 0x2C LOG0 0xE4 DUP7 0x49 DELEGATECALL 0xC4 0xCF 0xA6 0xA8 NOT 0xE5 0xCB 0xE6 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "8538:2564:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c68861bf64e61f829eb0c0e35cd06e7ca952ca0e48649f4c4cfa6a819e5cbe664736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC PUSH9 0x861BF64E61F829EB0C 0xE CALLDATALOAD 0xCD MOD 0xE7 0xCA SWAP6 0x2C LOG0 0xE4 DUP7 0x49 DELEGATECALL 0xC4 0xCF 0xA6 0xA8 NOT 0xE5 0xCB 0xE6 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "8538:2564:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8538,
									"end": 11102,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8538,
									"end": 11102,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c68861bf64e61f829eb0c0e35cd06e7ca952ca0e48649f4c4cfa6a819e5cbe664736f6c634300060c0033",
									".code": [
										{
											"begin": 8538,
											"end": 11102,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8538,
											"end": 11102,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8538,
											"end": 11102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8538,
											"end": 11102,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8538,
											"end": 11102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8538,
											"end": 11102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8538,
											"end": 11102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 11102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8538,
											"end": 11102,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Super-Zap.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Super-Zap.sol\":{\"keccak256\":\"0xee5d5d1fe214e4bfa712a77489b17e5303d030f83c8ab065e503ffdaaa9edb2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29fc440f26b8a73b828d578b001d3da74fb455ce05265a52d18fe7703a2fcfb8\",\"dweb:/ipfs/QmYB7XVBAvA9YpCQcDGWTsUaoyN2F1Mu3KKctpZ26SGMAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ContractGuard": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Super-Zap.sol\":15009:15709  contract ContractGuard {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Super-Zap.sol\":15009:15709  contract ContractGuard {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b981cccc0fb52ec98ad4722c6f8bdd873d573d80aaf43f5aafee1a43a19b75f364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b981cccc0fb52ec98ad4722c6f8bdd873d573d80aaf43f5aafee1a43a19b75f364736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 DUP2 0xCC 0xCC 0xF 0xB5 0x2E 0xC9 DUP11 0xD4 PUSH19 0x2C6F8BDD873D573D80AAF43F5AAFEE1A43A19B PUSH22 0xF364736F6C634300060C003300000000000000000000 ",
							"sourceMap": "15009:700:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b981cccc0fb52ec98ad4722c6f8bdd873d573d80aaf43f5aafee1a43a19b75f364736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 DUP2 0xCC 0xCC 0xF 0xB5 0x2E 0xC9 DUP11 0xD4 PUSH19 0x2C6F8BDD873D573D80AAF43F5AAFEE1A43A19B PUSH22 0xF364736F6C634300060C003300000000000000000000 ",
							"sourceMap": "15009:700:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"checkSameOriginReentranted()": "infinite",
								"checkSameSenderReentranted()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15009,
									"end": 15709,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15009,
									"end": 15709,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b981cccc0fb52ec98ad4722c6f8bdd873d573d80aaf43f5aafee1a43a19b75f364736f6c634300060c0033",
									".code": [
										{
											"begin": 15009,
											"end": 15709,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15009,
											"end": 15709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15009,
											"end": 15709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15009,
											"end": 15709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15709,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Super-Zap.sol\":\"ContractGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Super-Zap.sol\":{\"keccak256\":\"0xee5d5d1fe214e4bfa712a77489b17e5303d030f83c8ab065e503ffdaaa9edb2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29fc440f26b8a73b828d578b001d3da74fb455ce05265a52d18fe7703a2fcfb8\",\"dweb:/ipfs/QmYB7XVBAvA9YpCQcDGWTsUaoyN2F1Mu3KKctpZ26SGMAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 566,
								"contract": "contracts/Super-Zap.sol:ContractGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Super-Zap.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Super-Zap.sol\":{\"keccak256\":\"0xee5d5d1fe214e4bfa712a77489b17e5303d030f83c8ab065e503ffdaaa9edb2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29fc440f26b8a73b828d578b001d3da74fb455ce05265a52d18fe7703a2fcfb8\",\"dweb:/ipfs/QmYB7XVBAvA9YpCQcDGWTsUaoyN2F1Mu3KKctpZ26SGMAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IZapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "zapTokenToLP",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"zapTokenToLP(address,uint256,address)": "84767627"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"zapTokenToLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Super-Zap.sol\":\"IZapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Super-Zap.sol\":{\"keccak256\":\"0xee5d5d1fe214e4bfa712a77489b17e5303d030f83c8ab065e503ffdaaa9edb2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29fc440f26b8a73b828d578b001d3da74fb455ce05265a52d18fe7703a2fcfb8\",\"dweb:/ipfs/QmYB7XVBAvA9YpCQcDGWTsUaoyN2F1Mu3KKctpZ26SGMAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Super-Zap.sol\":11677:14931  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Super-Zap.sol\":11677:14931  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c54984f3c9831ec65b8b3f97b5a2503fdfe5a8c4ef5aeeee69f76aafc363967b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c54984f3c9831ec65b8b3f97b5a2503fdfe5a8c4ef5aeeee69f76aafc363967b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0x49 DUP5 RETURN 0xC9 DUP4 0x1E 0xC6 JUMPDEST DUP12 EXTCODEHASH SWAP8 0xB5 LOG2 POP EXTCODEHASH 0xDF 0xE5 0xA8 0xC4 0xEF GAS 0xEE 0xEE PUSH10 0xF76AAFC363967B64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "11677:3254:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c54984f3c9831ec65b8b3f97b5a2503fdfe5a8c4ef5aeeee69f76aafc363967b64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0x49 DUP5 RETURN 0xC9 DUP4 0x1E 0xC6 JUMPDEST DUP12 EXTCODEHASH SWAP8 0xB5 LOG2 POP EXTCODEHASH 0xDF 0xE5 0xA8 0xC4 0xEF GAS 0xEE 0xEE PUSH10 0xF76AAFC363967B64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "11677:3254:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11677,
									"end": 14931,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11677,
									"end": 14931,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c54984f3c9831ec65b8b3f97b5a2503fdfe5a8c4ef5aeeee69f76aafc363967b64736f6c634300060c0033",
									".code": [
										{
											"begin": 11677,
											"end": 14931,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 11677,
											"end": 14931,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11677,
											"end": 14931,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11677,
											"end": 14931,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11677,
											"end": 14931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11677,
											"end": 14931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11677,
											"end": 14931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11677,
											"end": 14931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11677,
											"end": 14931,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Super-Zap.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Super-Zap.sol\":{\"keccak256\":\"0xee5d5d1fe214e4bfa712a77489b17e5303d030f83c8ab065e503ffdaaa9edb2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29fc440f26b8a73b828d578b001d3da74fb455ce05265a52d18fe7703a2fcfb8\",\"dweb:/ipfs/QmYB7XVBAvA9YpCQcDGWTsUaoyN2F1Mu3KKctpZ26SGMAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Super-Zap.sol\":3648:8370  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Super-Zap.sol\":3648:8370  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206d1b4fd1f3baf96f8cd2607a76d0aee3380f70998a065da706bfe46d96b6e87064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d1b4fd1f3baf96f8cd2607a76d0aee3380f70998a065da706bfe46d96b6e87064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x1B4FD1F3BAF96F8CD2607A76D0AE 0xE3 CODESIZE 0xF PUSH17 0x998A065DA706BFE46D96B6E87064736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3648:4722:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d1b4fd1f3baf96f8cd2607a76d0aee3380f70998a065da706bfe46d96b6e87064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x1B4FD1F3BAF96F8CD2607A76D0AE 0xE3 CODESIZE 0xF PUSH17 0x998A065DA706BFE46D96B6E87064736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3648:4722:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3648,
									"end": 8370,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3648,
									"end": 8370,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d1b4fd1f3baf96f8cd2607a76d0aee3380f70998a065da706bfe46d96b6e87064736f6c634300060c0033",
									".code": [
										{
											"begin": 3648,
											"end": 8370,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 8370,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 8370,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3648,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3648,
											"end": 8370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 8370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 8370,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Super-Zap.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Super-Zap.sol\":{\"keccak256\":\"0xee5d5d1fe214e4bfa712a77489b17e5303d030f83c8ab065e503ffdaaa9edb2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29fc440f26b8a73b828d578b001d3da74fb455ce05265a52d18fe7703a2fcfb8\",\"dweb:/ipfs/QmYB7XVBAvA9YpCQcDGWTsUaoyN2F1Mu3KKctpZ26SGMAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SuperZap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_zapper",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_fudge",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_straw",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_fudgePair",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_strawPair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "approveZapper",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fudge",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fudgePair",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minFudge",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minStraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minStraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minFudge",
									"type": "uint256"
								}
							],
							"name": "setMins",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "straw",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "strawPair",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "percentFudgeLP",
									"type": "uint256"
								}
							],
							"name": "zapStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "zapper",
							"outputs": [
								{
									"internalType": "contract IZapper",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Super-Zap.sol\":15881:19227  contract SuperZap is ContractGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Super-Zap.sol\":16255:16770  constructor(address _zapper, address _fudge, address _straw, address _fudgePair, address _strawPair) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0xa0\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  dup1\n  dup4\n  add\n  mload\n  0x40\n  dup1\n  dup6\n  add\n  mload\n  0x60\n  dup7\n  add\n  mload\n  0x80\n  swap1\n  swap7\n  add\n  mload\n    /* \"contracts/Super-Zap.sol\":16374:16380  zapper */\n  0x01\n    /* \"contracts/Super-Zap.sol\":16374:16399  zapper = IZapper(_zapper) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup1\n  dup10\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  swap3\n  dup4\n  swap1\n  sstore\n    /* \"contracts/Super-Zap.sol\":16410:16415  fudge */\n  0x02\n    /* \"contracts/Super-Zap.sol\":16410:16432  fudge = IERC20(_fudge) */\n  dup1\n  sload\n  dup3\n  dup10\n  and\n  swap1\n  dup5\n  and\n  or\n  swap1\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Super-Zap.sol\":16443:16448  straw */\n  0x03\n    /* \"contracts/Super-Zap.sol\":16443:16465  straw = IERC20(_straw) */\n  dup1\n  sload\n  dup4\n  dup9\n  and\n  swap1\n  dup6\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Super-Zap.sol\":16476:16485  fudgePair */\n  0x04\n    /* \"contracts/Super-Zap.sol\":16476:16506  fudgePair = IERC20(_fudgePair) */\n  dup1\n  sload\n  dup4\n  dup14\n  and\n  swap1\n  dup6\n  and\n  or\n  dup2\n  sstore\n    /* \"contracts/Super-Zap.sol\":16517:16526  strawPair */\n  0x05\n    /* \"contracts/Super-Zap.sol\":16517:16547  strawPair = IERC20(_strawPair) */\n  dup1\n  sload\n  dup5\n  dup9\n  and\n  swap1\n  dup7\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Super-Zap.sol\":16558:16566  operator */\n  0x06\n    /* \"contracts/Super-Zap.sol\":16558:16579  operator = msg.sender */\n  dup1\n  sload\n  swap1\n  swap5\n  and\n    /* \"contracts/Super-Zap.sol\":16569:16579  msg.sender */\n  caller\n    /* \"contracts/Super-Zap.sol\":16558:16579  operator = msg.sender */\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/Super-Zap.sol\":16601:16614  0.0005 * 1e18 */\n  0x01c6bf52634000\n    /* \"contracts/Super-Zap.sol\":16590:16598  minStraw */\n  0x07\n    /* \"contracts/Super-Zap.sol\":16590:16614  minStraw = 0.0005 * 1e18 */\n  sstore\n    /* \"contracts/Super-Zap.sol\":16636:16640  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/Super-Zap.sol\":16625:16633  minFudge */\n  0x08\n    /* \"contracts/Super-Zap.sol\":16625:16640  minFudge = 1e18 */\n  sstore\n    /* \"contracts/Super-Zap.sol\":16653:16702  fudge.approve(address(zapper), type(uint256).max) */\n  dup7\n  mload\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n    /* \"contracts/Super-Zap.sol\":16675:16681  zapper */\n  swap4\n  dup3\n  and\n    /* \"contracts/Super-Zap.sol\":16653:16702  fudge.approve(address(zapper), type(uint256).max) */\n  swap3\n  dup5\n  add\n  swap3\n  swap1\n  swap3\n  mstore\n  not(0x00)\n  0x24\n  dup5\n  add\n  mstore\n  swap5\n  mload\n    /* \"contracts/Super-Zap.sol\":16255:16770  constructor(address _zapper, address _fudge, address _straw, address _fudgePair, address _strawPair) public {\r... */\n  swap8\n  swap9\n  swap6\n  swap8\n  swap4\n  swap7\n  swap3\n  swap5\n    /* \"contracts/Super-Zap.sol\":16653:16658  fudge */\n  and\n  swap3\n    /* \"contracts/Super-Zap.sol\":16653:16666  fudge.approve */\n  0x095ea7b3\n  swap3\n    /* \"contracts/Super-Zap.sol\":16653:16702  fudge.approve(address(zapper), type(uint256).max) */\n  0x44\n  dup1\n  dup5\n  add\n  swap4\n    /* \"contracts/Super-Zap.sol\":16255:16770  constructor(address _zapper, address _fudge, address _straw, address _fudgePair, address _strawPair) public {\r... */\n  swap2\n  swap3\n    /* \"contracts/Super-Zap.sol\":16653:16702  fudge.approve(address(zapper), type(uint256).max) */\n  swap2\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"contracts/Super-Zap.sol\":16374:16380  zapper */\n  0x00\n    /* \"contracts/Super-Zap.sol\":16653:16658  fudge */\n  dup8\n    /* \"contracts/Super-Zap.sol\":16653:16702  fudge.approve(address(zapper), type(uint256).max) */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_7\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n  pop\n    /* \"contracts/Super-Zap.sol\":16713:16718  straw */\n  sload(0x03)\n  0x01\n    /* \"contracts/Super-Zap.sol\":16735:16741  zapper */\n  sload\n    /* \"contracts/Super-Zap.sol\":16713:16762  straw.approve(address(zapper), type(uint256).max) */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Super-Zap.sol\":16735:16741  zapper */\n  swap3\n  dup4\n  and\n    /* \"contracts/Super-Zap.sol\":16713:16762  straw.approve(address(zapper), type(uint256).max) */\n  0x04\n  dup3\n  add\n  mstore\n  not(0x00)\n  0x24\n  dup3\n  add\n  mstore\n  swap1\n  mload\n    /* \"contracts/Super-Zap.sol\":16713:16718  straw */\n  swap2\n  swap1\n  swap3\n  and\n  swap2\n    /* \"contracts/Super-Zap.sol\":16713:16726  straw.approve */\n  0x095ea7b3\n  swap2\n    /* \"contracts/Super-Zap.sol\":16713:16762  straw.approve(address(zapper), type(uint256).max) */\n  0x44\n  dup1\n  dup4\n  add\n  swap3\n    /* \"contracts/Super-Zap.sol\":16653:16702  fudge.approve(address(zapper), type(uint256).max) */\n  0x20\n  swap3\n    /* \"contracts/Super-Zap.sol\":16713:16762  straw.approve(address(zapper), type(uint256).max) */\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"contracts/Super-Zap.sol\":16713:16718  straw */\n  0x00\n  dup8\n    /* \"contracts/Super-Zap.sol\":16713:16762  straw.approve(address(zapper), type(uint256).max) */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_9\n  jumpi\n  0x00\n  dup1\n  revert\ntag_9:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_11\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_11:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/Super-Zap.sol\":15881:19227  contract SuperZap is ContractGuard {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Super-Zap.sol\":15881:19227  contract SuperZap is ContractGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x741aa610\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x741aa610\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x85499cfb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x984b163e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa7a21712\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb9b5fd07\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd0318d7e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x02c426a8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1c15716b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4d4af36f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x620b2c73\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Super-Zap.sol\":16223:16246  uint256 public minFudge */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Super-Zap.sol\":16103:16126  IERC20 public fudgePair */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Super-Zap.sol\":16912:17059  function setMins(uint256 _minStraw, uint256 _minFudge) external onlyOperator {\r... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/Super-Zap.sol\":17211:17481  function withdraw(address asset) external onlyOperator {\r... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_25\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":16163:16186  address public operator */\n    tag_7:\n      tag_18\n      tag_27\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":17665:19224  function zapStrategy(address from, uint256 amount, uint256 percentFudgeLP) external returns (uint256, uint256) {\r... */\n    tag_8:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      add\n      calldataload\n      tag_30\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"contracts/Super-Zap.sol\":16051:16070  IERC20 public fudge */\n    tag_9:\n      tag_18\n      tag_32\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":17067:17203  function approveZapper(address asset) external onlyOperator {\r... */\n    tag_10:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_35\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":16133:16156  IERC20 public strawPair */\n    tag_11:\n      tag_18\n      tag_37\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":16023:16044  IZapper public zapper */\n    tag_12:\n      tag_18\n      tag_39\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":16077:16096  IERC20 public straw */\n    tag_13:\n      tag_18\n      tag_41\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":16193:16216  uint256 public minStraw */\n    tag_14:\n      tag_16\n      tag_43\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":16223:16246  uint256 public minFudge */\n    tag_17:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":16103:16126  IERC20 public fudgePair */\n    tag_19:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n      dup2\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":16912:17059  function setMins(uint256 _minStraw, uint256 _minFudge) external onlyOperator {\r... */\n    tag_22:\n        /* \"contracts/Super-Zap.sol\":16821:16829  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"contracts/Super-Zap.sol\":16833:16843  msg.sender */\n      caller\n        /* \"contracts/Super-Zap.sol\":16821:16843  operator == msg.sender */\n      eq\n        /* \"contracts/Super-Zap.sol\":16813:16884  require(operator == msg.sender, \"SuperZap: caller is not the operator\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_40960c214819ead63fefdd8daacedc8ff37ea1cb3d93ededabce0e8931268929\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"contracts/Super-Zap.sol\":17000:17008  minStraw */\n      0x07\n        /* \"contracts/Super-Zap.sol\":17000:17020  minStraw = _minStraw */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Super-Zap.sol\":17031:17039  minFudge */\n      0x08\n        /* \"contracts/Super-Zap.sol\":17031:17051  minFudge = _minFudge */\n      sstore\n        /* \"contracts/Super-Zap.sol\":16912:17059  function setMins(uint256 _minStraw, uint256 _minFudge) external onlyOperator {\r... */\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":17211:17481  function withdraw(address asset) external onlyOperator {\r... */\n    tag_25:\n        /* \"contracts/Super-Zap.sol\":16821:16829  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"contracts/Super-Zap.sol\":16833:16843  msg.sender */\n      caller\n        /* \"contracts/Super-Zap.sol\":16821:16843  operator == msg.sender */\n      eq\n        /* \"contracts/Super-Zap.sol\":16813:16884  require(operator == msg.sender, \"SuperZap: caller is not the operator\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_40960c214819ead63fefdd8daacedc8ff37ea1cb3d93ededabce0e8931268929\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":17281:17300  asset != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Super-Zap.sol\":17277:17473  if (asset != address(0))\r... */\n      tag_50\n      jumpi\n        /* \"contracts/Super-Zap.sol\":17315:17393  IERC20(asset).safeTransfer(msg.sender, IERC20(asset).balanceOf(address(this))) */\n      tag_51\n        /* \"contracts/Super-Zap.sol\":17342:17352  msg.sender */\n      caller\n        /* \"contracts/Super-Zap.sol\":17361:17366  asset */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":17354:17377  IERC20(asset).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Super-Zap.sol\":17386:17390  this */\n      address\n        /* \"contracts/Super-Zap.sol\":17354:17392  IERC20(asset).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":17315:17341  IERC20(asset).safeTransfer */\n      dup5\n      and\n      swap2\n        /* \"contracts/Super-Zap.sol\":17315:17393  IERC20(asset).safeTransfer(msg.sender, IERC20(asset).balanceOf(address(this))) */\n      swap1\n        /* \"contracts/Super-Zap.sol\":17315:17341  IERC20(asset).safeTransfer */\n      tag_56\n        /* \"contracts/Super-Zap.sol\":17315:17393  IERC20(asset).safeTransfer(msg.sender, IERC20(asset).balanceOf(address(this))) */\n      jump\t// in\n    tag_51:\n        /* \"contracts/Super-Zap.sol\":17277:17473  if (asset != address(0))\r... */\n      jump(tag_57)\n    tag_50:\n        /* \"contracts/Super-Zap.sol\":17422:17473  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"contracts/Super-Zap.sol\":17430:17440  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Super-Zap.sol\":17451:17472  address(this).balance */\n      selfbalance\n        /* \"contracts/Super-Zap.sol\":17422:17473  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/Super-Zap.sol\":17451:17472  address(this).balance */\n      dup6\n        /* \"contracts/Super-Zap.sol\":17430:17440  msg.sender */\n      dup9\n        /* \"contracts/Super-Zap.sol\":17422:17473  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n        /* \"contracts/Super-Zap.sol\":17277:17473  if (asset != address(0))\r... */\n    tag_57:\n        /* \"contracts/Super-Zap.sol\":17211:17481  function withdraw(address asset) external onlyOperator {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":16163:16186  address public operator */\n    tag_27:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":17665:19224  function zapStrategy(address from, uint256 amount, uint256 percentFudgeLP) external returns (uint256, uint256) {\r... */\n    tag_30:\n        /* \"contracts/Super-Zap.sol\":17758:17765  uint256 */\n      0x00\n        /* \"contracts/Super-Zap.sol\":17767:17774  uint256 */\n      dup1\n        /* \"contracts/Super-Zap.sol\":17813:17816  100 */\n      0x64\n        /* \"contracts/Super-Zap.sol\":17795:17809  percentFudgeLP */\n      dup4\n        /* \"contracts/Super-Zap.sol\":17795:17816  percentFudgeLP <= 100 */\n      gt\n      iszero\n        /* \"contracts/Super-Zap.sol\":17787:17849  require(percentFudgeLP <= 100, \"Invalid FUDGE-DAI-LP percent\") */\n      tag_61\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c69642046554447452d4441492d4c502070657263656e7400000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/Super-Zap.sol\":17906:17912  amount */\n      dup4\n        /* \"contracts/Super-Zap.sol\":17875:17879  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":17868:17890  IERC20(from).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Super-Zap.sol\":17891:17901  msg.sender */\n      caller\n        /* \"contracts/Super-Zap.sol\":17868:17902  IERC20(from).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      mload\n        /* \"contracts/Super-Zap.sol\":17868:17912  IERC20(from).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/Super-Zap.sol\":17860:17937  require(IERC20(from).balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_66\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/Super-Zap.sol\":17948:18012  IERC20(from).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_67\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":17948:17977  IERC20(from).safeTransferFrom */\n      dup7\n      and\n        /* \"contracts/Super-Zap.sol\":17978:17988  msg.sender */\n      caller\n        /* \"contracts/Super-Zap.sol\":17998:18002  this */\n      address\n        /* \"contracts/Super-Zap.sol\":18005:18011  amount */\n      dup8\n        /* \"contracts/Super-Zap.sol\":17948:17977  IERC20(from).safeTransferFrom */\n      tag_68\n        /* \"contracts/Super-Zap.sol\":17948:18012  IERC20(from).safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/Super-Zap.sol\":18025:18048  uint256 amountFudgePair */\n      0x00\n        /* \"contracts/Super-Zap.sol\":18068:18071  100 */\n      0x64\n        /* \"contracts/Super-Zap.sol\":18051:18065  percentFudgeLP */\n      dup5\n        /* \"contracts/Super-Zap.sol\":18051:18071  percentFudgeLP < 100 */\n      lt\n        /* \"contracts/Super-Zap.sol\":18051:18118  percentFudgeLP < 100 ? amount.mul(percentFudgeLP).div(100) : amount */\n      tag_69\n      jumpi\n        /* \"contracts/Super-Zap.sol\":18112:18118  amount */\n      dup5\n        /* \"contracts/Super-Zap.sol\":18051:18118  percentFudgeLP < 100 ? amount.mul(percentFudgeLP).div(100) : amount */\n      jump(tag_71)\n    tag_69:\n        /* \"contracts/Super-Zap.sol\":18074:18109  amount.mul(percentFudgeLP).div(100) */\n      tag_71\n        /* \"contracts/Super-Zap.sol\":18105:18108  100 */\n      0x64\n        /* \"contracts/Super-Zap.sol\":18074:18100  amount.mul(percentFudgeLP) */\n      tag_72\n        /* \"contracts/Super-Zap.sol\":18074:18080  amount */\n      dup8\n        /* \"contracts/Super-Zap.sol\":18085:18099  percentFudgeLP */\n      dup8\n        /* \"contracts/Super-Zap.sol\":18074:18084  amount.mul */\n      tag_73\n        /* \"contracts/Super-Zap.sol\":18074:18100  amount.mul(percentFudgeLP) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/Super-Zap.sol\":18074:18104  amount.mul(percentFudgeLP).div */\n      swap1\n      tag_74\n        /* \"contracts/Super-Zap.sol\":18074:18109  amount.mul(percentFudgeLP).div(100) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/Super-Zap.sol\":18025:18118  uint256 amountFudgePair = percentFudgeLP < 100 ? amount.mul(percentFudgeLP).div(100) : amount */\n      swap1\n      pop\n        /* \"contracts/Super-Zap.sol\":18129:18152  uint256 amountStrawPair */\n      0x00\n        /* \"contracts/Super-Zap.sol\":18155:18182  amount.sub(amountFudgePair) */\n      tag_75\n        /* \"contracts/Super-Zap.sol\":18155:18161  amount */\n      dup7\n        /* \"contracts/Super-Zap.sol\":18025:18118  uint256 amountFudgePair = percentFudgeLP < 100 ? amount.mul(percentFudgeLP).div(100) : amount */\n      dup4\n        /* \"contracts/Super-Zap.sol\":18155:18165  amount.sub */\n      tag_76\n        /* \"contracts/Super-Zap.sol\":18155:18182  amount.sub(amountFudgePair) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/Super-Zap.sol\":18217:18226  fudgePair */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Super-Zap.sol\":18217:18251  fudgePair.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Super-Zap.sol\":18245:18249  this */\n      address\n        /* \"contracts/Super-Zap.sol\":18217:18251  fudgePair.balanceOf(address(this)) */\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      mload\n        /* \"contracts/Super-Zap.sol\":18129:18182  uint256 amountStrawPair = amount.sub(amountFudgePair) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Super-Zap.sol\":18195:18214  uint256 prevFudgeLP */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":18217:18226  fudgePair */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/Super-Zap.sol\":18217:18236  fudgePair.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/Super-Zap.sol\":18217:18251  fudgePair.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Super-Zap.sol\":18217:18226  fudgePair */\n      dup7\n        /* \"contracts/Super-Zap.sol\":18217:18251  fudgePair.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      mload\n        /* \"contracts/Super-Zap.sol\":18284:18293  strawPair */\n      sload(0x05)\n        /* \"contracts/Super-Zap.sol\":18284:18318  strawPair.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Super-Zap.sol\":18312:18316  this */\n      address\n        /* \"contracts/Super-Zap.sol\":18284:18318  strawPair.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/Super-Zap.sol\":18217:18251  fudgePair.balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Super-Zap.sol\":18262:18281  uint256 prevStrawLP */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":18284:18293  strawPair */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Super-Zap.sol\":18284:18303  strawPair.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/Super-Zap.sol\":18284:18318  strawPair.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"contracts/Super-Zap.sol\":18217:18251  fudgePair.balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"contracts/Super-Zap.sol\":18284:18318  strawPair.balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Super-Zap.sol\":18284:18293  strawPair */\n      dup7\n        /* \"contracts/Super-Zap.sol\":18284:18318  strawPair.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Super-Zap.sol\":18343:18375  _checkMin(from, amountFudgePair) */\n      tag_85\n        /* \"contracts/Super-Zap.sol\":18353:18357  from */\n      dup10\n        /* \"contracts/Super-Zap.sol\":18359:18374  amountFudgePair */\n      dup6\n        /* \"contracts/Super-Zap.sol\":18343:18352  _checkMin */\n      tag_86\n        /* \"contracts/Super-Zap.sol\":18343:18375  _checkMin(from, amountFudgePair) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/Super-Zap.sol\":18339:18553  if (_checkMin(from, amountFudgePair)) {\r... */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/Super-Zap.sol\":18392:18398  zapper */\n      sload(0x01)\n        /* \"contracts/Super-Zap.sol\":18443:18452  fudgePair */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Super-Zap.sol\":18392:18454  zapper.zapTokenToLP(from, amountFudgePair, address(fudgePair)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x84767627)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup15\n      dup2\n      and\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x24\n      dup2\n      add\n      dup10\n      swap1\n      mstore\n        /* \"contracts/Super-Zap.sol\":18443:18452  fudgePair */\n      swap2\n      dup4\n      and\n        /* \"contracts/Super-Zap.sol\":18392:18454  zapper.zapTokenToLP(from, amountFudgePair, address(fudgePair)) */\n      0x44\n      dup4\n      add\n      mstore\n      mload\n        /* \"contracts/Super-Zap.sol\":18392:18398  zapper */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Super-Zap.sol\":18392:18411  zapper.zapTokenToLP */\n      0x84767627\n      swap2\n        /* \"contracts/Super-Zap.sol\":18392:18454  zapper.zapTokenToLP(from, amountFudgePair, address(fudgePair)) */\n      0x64\n      dup1\n      dup4\n      add\n      swap3\n        /* \"contracts/Super-Zap.sol\":18392:18398  zapper */\n      0x00\n      swap3\n        /* \"contracts/Super-Zap.sol\":18392:18454  zapper.zapTokenToLP(from, amountFudgePair, address(fudgePair)) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Super-Zap.sol\":18392:18398  zapper */\n      dup4\n      dup8\n        /* \"contracts/Super-Zap.sol\":18392:18454  zapper.zapTokenToLP(from, amountFudgePair, address(fudgePair)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Super-Zap.sol\":18339:18553  if (_checkMin(from, amountFudgePair)) {\r... */\n      jump(tag_92)\n    tag_87:\n        /* \"contracts/Super-Zap.sol\":18487:18541  IERC20(from).safeTransfer(msg.sender, amountFudgePair) */\n      tag_92\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":18487:18512  IERC20(from).safeTransfer */\n      dup11\n      and\n        /* \"contracts/Super-Zap.sol\":18513:18523  msg.sender */\n      caller\n        /* \"contracts/Super-Zap.sol\":18525:18540  amountFudgePair */\n      dup7\n        /* \"contracts/Super-Zap.sol\":18487:18512  IERC20(from).safeTransfer */\n      tag_56\n        /* \"contracts/Super-Zap.sol\":18487:18541  IERC20(from).safeTransfer(msg.sender, amountFudgePair) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/Super-Zap.sol\":18567:18599  _checkMin(from, amountStrawPair) */\n      tag_93\n        /* \"contracts/Super-Zap.sol\":18577:18581  from */\n      dup10\n        /* \"contracts/Super-Zap.sol\":18583:18598  amountStrawPair */\n      dup5\n        /* \"contracts/Super-Zap.sol\":18567:18576  _checkMin */\n      tag_86\n        /* \"contracts/Super-Zap.sol\":18567:18599  _checkMin(from, amountStrawPair) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/Super-Zap.sol\":18563:18777  if (_checkMin(from, amountStrawPair)) {\r... */\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/Super-Zap.sol\":18616:18622  zapper */\n      sload(0x01)\n        /* \"contracts/Super-Zap.sol\":18667:18676  strawPair */\n      sload(0x05)\n        /* \"contracts/Super-Zap.sol\":18616:18678  zapper.zapTokenToLP(from, amountStrawPair, address(strawPair)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x84767627)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup14\n      dup2\n      and\n      0x04\n      dup4\n      add\n      mstore\n      0x24\n      dup3\n      add\n      dup9\n      swap1\n      mstore\n        /* \"contracts/Super-Zap.sol\":18667:18676  strawPair */\n      swap3\n      dup4\n      and\n        /* \"contracts/Super-Zap.sol\":18616:18678  zapper.zapTokenToLP(from, amountStrawPair, address(strawPair)) */\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/Super-Zap.sol\":18616:18622  zapper */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Super-Zap.sol\":18616:18635  zapper.zapTokenToLP */\n      0x84767627\n      swap2\n        /* \"contracts/Super-Zap.sol\":18616:18678  zapper.zapTokenToLP(from, amountStrawPair, address(strawPair)) */\n      0x64\n      dup1\n      dup4\n      add\n      swap3\n        /* \"contracts/Super-Zap.sol\":18616:18622  zapper */\n      0x00\n      swap3\n        /* \"contracts/Super-Zap.sol\":18616:18678  zapper.zapTokenToLP(from, amountStrawPair, address(strawPair)) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Super-Zap.sol\":18616:18622  zapper */\n      dup4\n      dup8\n        /* \"contracts/Super-Zap.sol\":18616:18678  zapper.zapTokenToLP(from, amountStrawPair, address(strawPair)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Super-Zap.sol\":18563:18777  if (_checkMin(from, amountStrawPair)) {\r... */\n      jump(tag_99)\n    tag_94:\n        /* \"contracts/Super-Zap.sol\":18711:18765  IERC20(from).safeTransfer(msg.sender, amountStrawPair) */\n      tag_99\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":18711:18736  IERC20(from).safeTransfer */\n      dup11\n      and\n        /* \"contracts/Super-Zap.sol\":18737:18747  msg.sender */\n      caller\n        /* \"contracts/Super-Zap.sol\":18749:18764  amountStrawPair */\n      dup6\n        /* \"contracts/Super-Zap.sol\":18711:18736  IERC20(from).safeTransfer */\n      tag_56\n        /* \"contracts/Super-Zap.sol\":18711:18765  IERC20(from).safeTransfer(msg.sender, amountStrawPair) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/Super-Zap.sol\":18813:18822  fudgePair */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Super-Zap.sol\":18813:18847  fudgePair.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Super-Zap.sol\":18841:18845  this */\n      address\n        /* \"contracts/Super-Zap.sol\":18813:18847  fudgePair.balanceOf(address(this)) */\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      mload\n        /* \"contracts/Super-Zap.sol\":18789:18810  uint256 zappedFudgeLP */\n      0x00\n      swap3\n        /* \"contracts/Super-Zap.sol\":18813:18864  fudgePair.balanceOf(address(this)).sub(prevFudgeLP) */\n      tag_100\n      swap3\n        /* \"contracts/Super-Zap.sol\":18852:18863  prevFudgeLP */\n      dup7\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":18813:18822  fudgePair */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/Super-Zap.sol\":18813:18832  fudgePair.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/Super-Zap.sol\":18813:18847  fudgePair.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Super-Zap.sol\":18813:18822  fudgePair */\n      dup7\n        /* \"contracts/Super-Zap.sol\":18813:18847  fudgePair.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      mload\n      swap1\n        /* \"contracts/Super-Zap.sol\":18813:18851  fudgePair.balanceOf(address(this)).sub */\n      tag_76\n        /* \"contracts/Super-Zap.sol\":18813:18864  fudgePair.balanceOf(address(this)).sub(prevFudgeLP) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/Super-Zap.sol\":18899:18908  strawPair */\n      sload(0x05)\n        /* \"contracts/Super-Zap.sol\":18899:18933  strawPair.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Super-Zap.sol\":18927:18931  this */\n      address\n        /* \"contracts/Super-Zap.sol\":18899:18933  strawPair.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/Super-Zap.sol\":18789:18864  uint256 zappedFudgeLP = fudgePair.balanceOf(address(this)).sub(prevFudgeLP) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Super-Zap.sol\":18875:18896  uint256 zappedStrawLP */\n      0x00\n      swap3\n        /* \"contracts/Super-Zap.sol\":18899:18950  strawPair.balanceOf(address(this)).sub(prevStrawLP) */\n      tag_105\n      swap3\n        /* \"contracts/Super-Zap.sol\":18938:18949  prevStrawLP */\n      dup7\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":18899:18908  strawPair */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/Super-Zap.sol\":18899:18918  strawPair.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/Super-Zap.sol\":18899:18933  strawPair.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Super-Zap.sol\":18899:18908  strawPair */\n      dup7\n        /* \"contracts/Super-Zap.sol\":18899:18933  strawPair.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/Super-Zap.sol\":18899:18950  strawPair.balanceOf(address(this)).sub(prevStrawLP) */\n    tag_105:\n        /* \"contracts/Super-Zap.sol\":18875:18950  uint256 zappedStrawLP = strawPair.balanceOf(address(this)).sub(prevStrawLP) */\n      swap1\n      pop\n        /* \"contracts/Super-Zap.sol\":18975:18992  zappedFudgeLP > 0 */\n      dup2\n      iszero\n        /* \"contracts/Super-Zap.sol\":18971:19057  if (zappedFudgeLP > 0)\r... */\n      tag_111\n      jumpi\n        /* \"contracts/Super-Zap.sol\":19007:19016  fudgePair */\n      sload(0x04)\n        /* \"contracts/Super-Zap.sol\":19007:19057  fudgePair.safeTransfer(msg.sender,  zappedFudgeLP) */\n      tag_111\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":19007:19016  fudgePair */\n      and\n        /* \"contracts/Super-Zap.sol\":19030:19040  msg.sender */\n      caller\n        /* \"contracts/Super-Zap.sol\":19043:19056  zappedFudgeLP */\n      dup5\n        /* \"contracts/Super-Zap.sol\":19007:19029  fudgePair.safeTransfer */\n      tag_56\n        /* \"contracts/Super-Zap.sol\":19007:19057  fudgePair.safeTransfer(msg.sender,  zappedFudgeLP) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/Super-Zap.sol\":19072:19089  zappedStrawLP > 0 */\n      dup1\n      iszero\n        /* \"contracts/Super-Zap.sol\":19068:19154  if (zappedStrawLP > 0)\r... */\n      tag_113\n      jumpi\n        /* \"contracts/Super-Zap.sol\":19104:19113  strawPair */\n      sload(0x05)\n        /* \"contracts/Super-Zap.sol\":19104:19154  strawPair.safeTransfer(msg.sender,  zappedStrawLP) */\n      tag_113\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":19104:19113  strawPair */\n      and\n        /* \"contracts/Super-Zap.sol\":19127:19137  msg.sender */\n      caller\n        /* \"contracts/Super-Zap.sol\":19140:19153  zappedStrawLP */\n      dup4\n        /* \"contracts/Super-Zap.sol\":19104:19126  strawPair.safeTransfer */\n      tag_56\n        /* \"contracts/Super-Zap.sol\":19104:19154  strawPair.safeTransfer(msg.sender,  zappedStrawLP) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/Super-Zap.sol\":19187:19200  zappedFudgeLP */\n      swap1\n      swap11\n      swap1\n      swap10\n      pop\n        /* \"contracts/Super-Zap.sol\":17665:19224  function zapStrategy(address from, uint256 amount, uint256 percentFudgeLP) external returns (uint256, uint256) {\r... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":16051:16070  IERC20 public fudge */\n    tag_32:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":17067:17203  function approveZapper(address asset) external onlyOperator {\r... */\n    tag_35:\n        /* \"contracts/Super-Zap.sol\":16821:16829  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"contracts/Super-Zap.sol\":16833:16843  msg.sender */\n      caller\n        /* \"contracts/Super-Zap.sol\":16821:16843  operator == msg.sender */\n      eq\n        /* \"contracts/Super-Zap.sol\":16813:16884  require(operator == msg.sender, \"SuperZap: caller is not the operator\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_40960c214819ead63fefdd8daacedc8ff37ea1cb3d93ededabce0e8931268929\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/Super-Zap.sol\":17168:17174  zapper */\n      sload(0x01)\n        /* \"contracts/Super-Zap.sol\":17138:17195  IERC20(asset).approve(address(zapper), type(uint256).max) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":17168:17174  zapper */\n      swap3\n      dup4\n      and\n        /* \"contracts/Super-Zap.sol\":17138:17195  IERC20(asset).approve(address(zapper), type(uint256).max) */\n      0x04\n      dup3\n      add\n      mstore\n      not(0x00)\n      0x24\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/Super-Zap.sol\":17138:17159  IERC20(asset).approve */\n      swap2\n      dup4\n      and\n      swap2\n      0x095ea7b3\n      swap2\n        /* \"contracts/Super-Zap.sol\":17138:17195  IERC20(asset).approve(address(zapper), type(uint256).max) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Super-Zap.sol\":17168:17174  zapper */\n      0x00\n        /* \"contracts/Super-Zap.sol\":17138:17159  IERC20(asset).approve */\n      dup8\n        /* \"contracts/Super-Zap.sol\":17138:17195  IERC20(asset).approve(address(zapper), type(uint256).max) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      pop\n      pop\n        /* \"contracts/Super-Zap.sol\":17067:17203  function approveZapper(address asset) external onlyOperator {\r... */\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":16133:16156  IERC20 public strawPair */\n    tag_37:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      dup2\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":16023:16044  IZapper public zapper */\n    tag_39:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":16077:16096  IERC20 public straw */\n    tag_41:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":16193:16216  uint256 public minStraw */\n    tag_43:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":11769:11946  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n    tag_56:\n        /* \"contracts/Super-Zap.sol\":11879:11937  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"contracts/Super-Zap.sol\":11852:11938  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_120\n      swap1\n        /* \"contracts/Super-Zap.sol\":11872:11877  token */\n      dup5\n      swap1\n        /* \"contracts/Super-Zap.sol\":11852:11871  _callOptionalReturn */\n      tag_123\n        /* \"contracts/Super-Zap.sol\":11852:11938  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":11954:12159  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n    tag_68:\n        /* \"contracts/Super-Zap.sol\":12082:12150  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"contracts/Super-Zap.sol\":12055:12151  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_125\n      swap1\n        /* \"contracts/Super-Zap.sol\":12075:12080  token */\n      dup6\n      swap1\n        /* \"contracts/Super-Zap.sol\":12055:12074  _callOptionalReturn */\n      tag_123\n        /* \"contracts/Super-Zap.sol\":12055:12151  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/Super-Zap.sol\":11954:12159  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":5233:5704  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_73:\n        /* \"contracts/Super-Zap.sol\":5291:5298  uint256 */\n      0x00\n        /* \"contracts/Super-Zap.sol\":5536:5542  a == 0 */\n      dup3\n        /* \"contracts/Super-Zap.sol\":5532:5579  if (a == 0) {\r... */\n      tag_127\n      jumpi\n      pop\n        /* \"contracts/Super-Zap.sol\":5566:5567  0 */\n      0x00\n        /* \"contracts/Super-Zap.sol\":5559:5567  return 0 */\n      jump(tag_126)\n        /* \"contracts/Super-Zap.sol\":5532:5579  if (a == 0) {\r... */\n    tag_127:\n        /* \"contracts/Super-Zap.sol\":5603:5608  a * b */\n      dup3\n      dup3\n      mul\n        /* \"contracts/Super-Zap.sol\":5607:5608  b */\n      dup3\n        /* \"contracts/Super-Zap.sol\":5603:5604  a */\n      dup5\n        /* \"contracts/Super-Zap.sol\":5603:5608  a * b */\n      dup3\n        /* \"contracts/Super-Zap.sol\":5603:5604  a */\n      dup2\n        /* \"contracts/Super-Zap.sol\":5627:5632  c / a */\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n      div\n        /* \"contracts/Super-Zap.sol\":5627:5637  c / a == b */\n      eq\n        /* \"contracts/Super-Zap.sol\":5619:5675  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/Super-Zap.sol\":5695:5696  c */\n      swap1\n      pop\n        /* \"contracts/Super-Zap.sol\":5233:5704  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_126:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":6172:6304  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_74:\n        /* \"contracts/Super-Zap.sol\":6230:6237  uint256 */\n      0x00\n        /* \"contracts/Super-Zap.sol\":6257:6296  div(a, b, \"SafeMath: division by zero\") */\n      tag_129\n        /* \"contracts/Super-Zap.sol\":6261:6262  a */\n      dup4\n        /* \"contracts/Super-Zap.sol\":6264:6265  b */\n      dup4\n        /* \"contracts/Super-Zap.sol\":6257:6296  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Super-Zap.sol\":6257:6260  div */\n      tag_132\n        /* \"contracts/Super-Zap.sol\":6257:6296  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":4359:4495  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_76:\n        /* \"contracts/Super-Zap.sol\":4417:4424  uint256 */\n      0x00\n        /* \"contracts/Super-Zap.sol\":4444:4487  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_129\n        /* \"contracts/Super-Zap.sol\":4448:4449  a */\n      dup4\n        /* \"contracts/Super-Zap.sol\":4451:4452  b */\n      dup4\n        /* \"contracts/Super-Zap.sol\":4444:4487  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Super-Zap.sol\":4444:4447  sub */\n      tag_135\n        /* \"contracts/Super-Zap.sol\":4444:4487  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/Super-Zap.sol\":17489:17657  function _checkMin(address from, uint256 amount) internal view returns (bool) {\r... */\n    tag_86:\n        /* \"contracts/Super-Zap.sol\":17601:17606  fudge */\n      sload(0x02)\n        /* \"contracts/Super-Zap.sol\":17561:17565  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":17585:17607  from == address(fudge) */\n      dup5\n      dup2\n      and\n        /* \"contracts/Super-Zap.sol\":17601:17606  fudge */\n      swap2\n      and\n        /* \"contracts/Super-Zap.sol\":17585:17607  from == address(fudge) */\n      eq\n        /* \"contracts/Super-Zap.sol\":17585:17649  from == address(fudge) ? amount >= minFudge : amount >= minStraw */\n      tag_137\n      jumpi\n        /* \"contracts/Super-Zap.sol\":17641:17649  minStraw */\n      sload(0x07)\n        /* \"contracts/Super-Zap.sol\":17631:17637  amount */\n      dup3\n        /* \"contracts/Super-Zap.sol\":17631:17649  amount >= minStraw */\n      lt\n      iszero\n        /* \"contracts/Super-Zap.sol\":17585:17649  from == address(fudge) ? amount >= minFudge : amount >= minStraw */\n      jump(tag_129)\n    tag_137:\n      pop\n        /* \"contracts/Super-Zap.sol\":17620:17628  minFudge */\n      sload(0x08)\n      gt\n        /* \"contracts/Super-Zap.sol\":17610:17628  amount >= minFudge */\n      iszero\n      swap2\n        /* \"contracts/Super-Zap.sol\":17489:17657  function _checkMin(address from, uint256 amount) internal view returns (bool) {\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":13813:14928  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_123:\n        /* \"contracts/Super-Zap.sol\":14418:14445  address(token).isContract() */\n      tag_140\n        /* \"contracts/Super-Zap.sol\":14426:14431  token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":14418:14443  address(token).isContract */\n      and\n      tag_141\n        /* \"contracts/Super-Zap.sol\":14418:14445  address(token).isContract() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/Super-Zap.sol\":14410:14481  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_142\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/Super-Zap.sol\":14555:14567  bool success */\n      0x00\n        /* \"contracts/Super-Zap.sol\":14569:14592  bytes memory returndata */\n      0x60\n        /* \"contracts/Super-Zap.sol\":14604:14609  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Super-Zap.sol\":14596:14615  address(token).call */\n      and\n        /* \"contracts/Super-Zap.sol\":14616:14620  data */\n      dup4\n        /* \"contracts/Super-Zap.sol\":14596:14621  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_143:\n      0x20\n      dup4\n      lt\n      tag_145\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_143)\n    tag_145:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_148\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_147)\n    tag_148:\n      0x60\n      swap2\n      pop\n    tag_147:\n      pop\n        /* \"contracts/Super-Zap.sol\":14554:14621  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Super-Zap.sol\":14640:14647  success */\n      dup2\n        /* \"contracts/Super-Zap.sol\":14632:14684  require(success, \"SafeERC20: low-level call failed\") */\n      tag_149\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/Super-Zap.sol\":14701:14718  returndata.length */\n      dup1\n      mload\n        /* \"contracts/Super-Zap.sol\":14701:14722  returndata.length > 0 */\n      iszero\n        /* \"contracts/Super-Zap.sol\":14697:14921  if (returndata.length > 0) { // Return data is optional\r... */\n      tag_125\n      jumpi\n        /* \"contracts/Super-Zap.sol\":14843:14853  returndata */\n      dup1\n        /* \"contracts/Super-Zap.sol\":14832:14862  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      mload\n        /* \"contracts/Super-Zap.sol\":14824:14909  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Super-Zap.sol\":6792:7137  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_132:\n        /* \"contracts/Super-Zap.sol\":6878:6885  uint256 */\n      0x00\n        /* \"contracts/Super-Zap.sol\":6980:6992  errorMessage */\n      dup2\n        /* \"contracts/Super-Zap.sol\":6973:6978  b > 0 */\n      dup4\n        /* \"contracts/Super-Zap.sol\":6965:6993  require(b > 0, errorMessage) */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_155:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_157\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_155)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_158:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n      pop\n        /* \"contracts/Super-Zap.sol\":7004:7013  uint256 c */\n      0x00\n        /* \"contracts/Super-Zap.sol\":7020:7021  b */\n      dup4\n        /* \"contracts/Super-Zap.sol\":7016:7017  a */\n      dup6\n        /* \"contracts/Super-Zap.sol\":7016:7021  a / b */\n      dup2\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n      div\n      swap6\n        /* \"contracts/Super-Zap.sol\":6792:7137  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":4790:4982  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_135:\n        /* \"contracts/Super-Zap.sol\":4876:4883  uint256 */\n      0x00\n        /* \"contracts/Super-Zap.sol\":4912:4924  errorMessage */\n      dup2\n        /* \"contracts/Super-Zap.sol\":4904:4910  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/Super-Zap.sol\":4896:4925  require(b <= a, errorMessage) */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_157\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_155)\n    tag_161:\n      pop\n      pop\n      pop\n        /* \"contracts/Super-Zap.sol\":4948:4953  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/Super-Zap.sol\":4790:4982  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/Super-Zap.sol\":9148:9767  function isContract(address account) internal view returns (bool) {\r... */\n    tag_141:\n        /* \"contracts/Super-Zap.sol\":9208:9212  bool */\n      0x00\n        /* \"contracts/Super-Zap.sol\":9676:9696  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"contracts/Super-Zap.sol\":9519:9585  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"contracts/Super-Zap.sol\":9716:9739  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Super-Zap.sol\":9716:9758  codehash != accountHash && codehash != 0x0 */\n      tag_167\n      jumpi\n      pop\n        /* \"contracts/Super-Zap.sol\":9743:9758  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/Super-Zap.sol\":9716:9758  codehash != accountHash && codehash != 0x0 */\n    tag_167:\n        /* \"contracts/Super-Zap.sol\":9708:9759  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"contracts/Super-Zap.sol\":9148:9767  function isContract(address account) internal view returns (bool) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_40960c214819ead63fefdd8daacedc8ff37ea1cb3d93ededabce0e8931268929 53757065725a61703a2063616c6c6572206973206e6f7420746865206f70657261746f72\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa26469706673582212200c84df823c3331ec0488a21b65e6f85f14e289f0e8e5c4477e4271932876594c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161108c38038061108c833981810160405260a081101561003357600080fd5b5080516020808301516040808501516060860151608090960151600180546001600160a01b038089166001600160a01b031992831617928390556002805482891690841617908190556003805483881690851617905560048054838d16908516178155600580548488169086161790556006805490941633179093556601c6bf52634000600755670de0b6b3a7640000600855865163095ea7b360e01b815293821692840192909252600019602484015294519798959793969294169263095ea7b3926044808401939192918290030181600087803b15801561011557600080fd5b505af1158015610129573d6000803e3d6000fd5b505050506040513d602081101561013f57600080fd5b50506003546001546040805163095ea7b360e01b81526001600160a01b03928316600482015260001960248201529051919092169163095ea7b39160448083019260209291908290030181600087803b15801561019b57600080fd5b505af11580156101af573d6000803e3d6000fd5b505050506040513d60208110156101c557600080fd5b50505050505050610eb1806101db6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063741aa61011610071578063741aa6101461019557806385499cfb1461019d578063984b163e146101c3578063a7a21712146101cb578063b9b5fd07146101d3578063d0318d7e146101db576100b4565b806302c426a8146100b95780631c15716b146100d35780634d4af36f146100f757806351cff8d91461011c578063570ca73514610142578063620b2c731461014a575b600080fd5b6100c16101e3565b60408051918252519081900360200190f35b6100db6101e9565b604080516001600160a01b039092168252519081900360200190f35b61011a6004803603604081101561010d57600080fd5b50803590602001356101f8565b005b61011a6004803603602081101561013257600080fd5b50356001600160a01b031661024c565b6100db610368565b61017c6004803603606081101561016057600080fd5b506001600160a01b038135169060208101359060400135610377565b6040805192835260208301919091528051918290030190f35b6100db610845565b61011a600480360360208110156101b357600080fd5b50356001600160a01b0316610854565b6100db610923565b6100db610932565b6100db610941565b6100c1610950565b60085481565b6004546001600160a01b031681565b6006546001600160a01b031633146102415760405162461bcd60e51b8152600401808060200182810382526024815260200180610e0d6024913960400191505060405180910390fd5b600791909155600855565b6006546001600160a01b031633146102955760405162461bcd60e51b8152600401808060200182810382526024815260200180610e0d6024913960400191505060405180910390fd5b6001600160a01b038116156103375761033233826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d602081101561031f57600080fd5b50516001600160a01b0384169190610956565b610365565b60405133904780156108fc02916000818181858888f19350505050158015610363573d6000803e3d6000fd5b505b50565b6006546001600160a01b031681565b60008060648311156103d0576040805162461bcd60e51b815260206004820152601c60248201527f496e76616c69642046554447452d4441492d4c502070657263656e7400000000604482015290519081900360640190fd5b83856001600160a01b03166370a08231336040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d602081101561044857600080fd5b50511015610494576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6104a96001600160a01b0386163330876109a8565b6000606484106104b957846104ce565b6104ce60646104c88787610a08565b90610a6a565b905060006104dc8683610aac565b60048054604080516370a0823160e01b81523093810193909352519293506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d602081101561055857600080fd5b5051600554604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156105ab57600080fd5b505afa1580156105bf573d6000803e3d6000fd5b505050506040513d60208110156105d557600080fd5b505190506105e38985610aee565b15610667576001546004805460408051638476762760e01b81526001600160a01b038e811694820194909452602481018990529183166044830152519190921691638476762791606480830192600092919082900301818387803b15801561064a57600080fd5b505af115801561065e573d6000803e3d6000fd5b5050505061067b565b61067b6001600160a01b038a163386610956565b6106858984610aee565b156107075760015460055460408051638476762760e01b81526001600160a01b038d8116600483015260248201889052928316604482015290519190921691638476762791606480830192600092919082900301818387803b1580156106ea57600080fd5b505af11580156106fe573d6000803e3d6000fd5b5050505061071b565b61071b6001600160a01b038a163385610956565b60048054604080516370a0823160e01b81523093810193909352516000926107a29286926001600160a01b03909116916370a08231916024808301926020929190829003018186803b15801561077057600080fd5b505afa158015610784573d6000803e3d6000fd5b505050506040513d602081101561079a57600080fd5b505190610aac565b600554604080516370a0823160e01b815230600482015290519293506000926107f99286926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b15801561077057600080fd5b9050811561081857600454610818906001600160a01b03163384610956565b801561083557600554610835906001600160a01b03163383610956565b909a909950975050505050505050565b6002546001600160a01b031681565b6006546001600160a01b0316331461089d5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e0d6024913960400191505060405180910390fd5b6001546040805163095ea7b360e01b81526001600160a01b039283166004820152600019602482015290519183169163095ea7b3916044808201926020929091908290030181600087803b1580156108f457600080fd5b505af1158015610908573d6000803e3d6000fd5b505050506040513d602081101561091e57600080fd5b505050565b6005546001600160a01b031681565b6001546001600160a01b031681565b6003546001600160a01b031681565b60075481565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261091e908490610b1c565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610a02908590610b1c565b50505050565b600082610a1757506000610a64565b82820282848281610a2457fe5b0414610a615760405162461bcd60e51b8152600401808060200182810382526021815260200180610e316021913960400191505060405180910390fd5b90505b92915050565b6000610a6183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610cd4565b6000610a6183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610d76565b6002546000906001600160a01b03848116911614610b1157600754821015610a61565b506008541115919050565b610b2e826001600160a01b0316610dd0565b610b7f576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610bbd5780518252601f199092019160209182019101610b9e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610c1f576040519150601f19603f3d011682016040523d82523d6000602084013e610c24565b606091505b509150915081610c7b576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610a0257808060200190516020811015610c9757600080fd5b5051610a025760405162461bcd60e51b815260040180806020018281038252602a815260200180610e52602a913960400191505060405180910390fd5b60008183610d605760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d25578181015183820152602001610d0d565b50505050905090810190601f168015610d525780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610d6c57fe5b0495945050505050565b60008184841115610dc85760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610d25578181015183820152602001610d0d565b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610e0457508115155b94935050505056fe53757065725a61703a2063616c6c6572206973206e6f7420746865206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212200c84df823c3331ec0488a21b65e6f85f14e289f0e8e5c4477e4271932876594c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x108C CODESIZE SUB DUP1 PUSH2 0x108C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 SWAP1 SWAP7 ADD MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 DUP10 AND SWAP1 DUP5 AND OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP4 DUP9 AND SWAP1 DUP6 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP4 DUP14 AND SWAP1 DUP6 AND OR DUP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP5 DUP9 AND SWAP1 DUP7 AND OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP5 AND CALLER OR SWAP1 SWAP4 SSTORE PUSH7 0x1C6BF52634000 PUSH1 0x7 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE DUP7 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 DUP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP5 ADD MSTORE SWAP5 MLOAD SWAP8 SWAP9 SWAP6 SWAP8 SWAP4 SWAP7 SWAP3 SWAP5 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH1 0x44 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x129 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP PUSH2 0xEB1 DUP1 PUSH2 0x1DB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x741AA610 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x741AA610 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x85499CFB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x984B163E EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xA7A21712 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xB9B5FD07 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xD0318D7E EQ PUSH2 0x1DB JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x2C426A8 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x1C15716B EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4D4AF36F EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x620B2C73 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24C JUMP JUMPDEST PUSH2 0xDB PUSH2 0x368 JUMP JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x845 JUMP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x854 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x923 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x932 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x941 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x950 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE0D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE0D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x337 JUMPI PUSH2 0x332 CALLER DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x309 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x363 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 DUP4 GT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642046554447452D4441492D4C502070657263656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x494 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND CALLER ADDRESS DUP8 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 DUP5 LT PUSH2 0x4B9 JUMPI DUP5 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x4CE PUSH1 0x64 PUSH2 0x4C8 DUP8 DUP8 PUSH2 0xA08 JUMP JUMPDEST SWAP1 PUSH2 0xA6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4DC DUP7 DUP4 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x542 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x5E3 DUP10 DUP6 PUSH2 0xAEE JUMP JUMPDEST ISZERO PUSH2 0x667 JUMPI PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x84767627 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 DUP4 AND PUSH1 0x44 DUP4 ADD MSTORE MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x84767627 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x67B JUMP JUMPDEST PUSH2 0x67B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND CALLER DUP7 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x685 DUP10 DUP5 PUSH2 0xAEE JUMP JUMPDEST ISZERO PUSH2 0x707 JUMPI PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x84767627 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP3 DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x84767627 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x71B JUMP JUMPDEST PUSH2 0x71B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND CALLER DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH2 0x7A2 SWAP3 DUP7 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x784 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x7F9 SWAP3 DUP7 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x818 JUMPI PUSH1 0x4 SLOAD PUSH2 0x818 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x956 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x835 JUMPI PUSH1 0x5 SLOAD PUSH2 0x835 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x956 JUMP JUMPDEST SWAP1 SWAP11 SWAP1 SWAP10 POP SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE0D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 DUP4 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x908 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x91E SWAP1 DUP5 SWAP1 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xA02 SWAP1 DUP6 SWAP1 PUSH2 0xB1C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA17 JUMPI POP PUSH1 0x0 PUSH2 0xA64 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xA24 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE31 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xB11 JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0xA61 JUMP JUMPDEST POP PUSH1 0x8 SLOAD GT ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2E DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0xB7F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xBBD JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xC7B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xA02 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE52 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD25 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD0D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD52 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xD6C JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xD25 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD0D JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xE04 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID MSTORE8 PUSH22 0x7065725A61703A2063616C6C6572206973206E6F7420 PUSH21 0x6865206F70657261746F72536166654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212200C84DF82 EXTCODECOPY CALLER BALANCE 0xEC DIV DUP9 LOG2 SHL PUSH6 0xE6F85F14E289 CREATE 0xE8 0xE5 0xC4 SELFBALANCE PUSH31 0x4271932876594C64736F6C634300060C003300000000000000000000000000 ",
							"sourceMap": "15881:3346:0:-:0;;;16255:515;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16255:515:0;;;;;;;;;;;;;;;;;;;;;16374:6;:25;;-1:-1:-1;;;;;16374:25:0;;;-1:-1:-1;;;;;;16374:25:0;;;;;;;;16410:5;:22;;;;;;;;;;;;;16443:5;:22;;;;;;;;;;;16476:9;:30;;;;;;;;;;;16517:9;:30;;;;;;;;;;;16558:8;:21;;;;;16569:10;16558:21;;;;16601:13;16590:8;:24;16636:4;16625:8;:15;16653:49;;-1:-1:-1;;;16653:49:0;;16675:6;;;16653:49;;;;;;;-1:-1:-1;;16653:49:0;;;;;;16255:515;;;;;;;;16653:5;;:13;;:49;;;;;16255:515;;16653:49;;;;;;16374:6;16653:5;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16713:5:0;;;16735:6;16713:49;;;-1:-1:-1;;;16713:49:0;;-1:-1:-1;;;;;16735:6:0;;;16713:49;;;;-1:-1:-1;;16713:49:0;;;;;;:5;;;;;:13;;:49;;;;;16653;;16713;;;;;;;:5;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;15881:3346:0;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063741aa61011610071578063741aa6101461019557806385499cfb1461019d578063984b163e146101c3578063a7a21712146101cb578063b9b5fd07146101d3578063d0318d7e146101db576100b4565b806302c426a8146100b95780631c15716b146100d35780634d4af36f146100f757806351cff8d91461011c578063570ca73514610142578063620b2c731461014a575b600080fd5b6100c16101e3565b60408051918252519081900360200190f35b6100db6101e9565b604080516001600160a01b039092168252519081900360200190f35b61011a6004803603604081101561010d57600080fd5b50803590602001356101f8565b005b61011a6004803603602081101561013257600080fd5b50356001600160a01b031661024c565b6100db610368565b61017c6004803603606081101561016057600080fd5b506001600160a01b038135169060208101359060400135610377565b6040805192835260208301919091528051918290030190f35b6100db610845565b61011a600480360360208110156101b357600080fd5b50356001600160a01b0316610854565b6100db610923565b6100db610932565b6100db610941565b6100c1610950565b60085481565b6004546001600160a01b031681565b6006546001600160a01b031633146102415760405162461bcd60e51b8152600401808060200182810382526024815260200180610e0d6024913960400191505060405180910390fd5b600791909155600855565b6006546001600160a01b031633146102955760405162461bcd60e51b8152600401808060200182810382526024815260200180610e0d6024913960400191505060405180910390fd5b6001600160a01b038116156103375761033233826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d602081101561031f57600080fd5b50516001600160a01b0384169190610956565b610365565b60405133904780156108fc02916000818181858888f19350505050158015610363573d6000803e3d6000fd5b505b50565b6006546001600160a01b031681565b60008060648311156103d0576040805162461bcd60e51b815260206004820152601c60248201527f496e76616c69642046554447452d4441492d4c502070657263656e7400000000604482015290519081900360640190fd5b83856001600160a01b03166370a08231336040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d602081101561044857600080fd5b50511015610494576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6104a96001600160a01b0386163330876109a8565b6000606484106104b957846104ce565b6104ce60646104c88787610a08565b90610a6a565b905060006104dc8683610aac565b60048054604080516370a0823160e01b81523093810193909352519293506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d602081101561055857600080fd5b5051600554604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156105ab57600080fd5b505afa1580156105bf573d6000803e3d6000fd5b505050506040513d60208110156105d557600080fd5b505190506105e38985610aee565b15610667576001546004805460408051638476762760e01b81526001600160a01b038e811694820194909452602481018990529183166044830152519190921691638476762791606480830192600092919082900301818387803b15801561064a57600080fd5b505af115801561065e573d6000803e3d6000fd5b5050505061067b565b61067b6001600160a01b038a163386610956565b6106858984610aee565b156107075760015460055460408051638476762760e01b81526001600160a01b038d8116600483015260248201889052928316604482015290519190921691638476762791606480830192600092919082900301818387803b1580156106ea57600080fd5b505af11580156106fe573d6000803e3d6000fd5b5050505061071b565b61071b6001600160a01b038a163385610956565b60048054604080516370a0823160e01b81523093810193909352516000926107a29286926001600160a01b03909116916370a08231916024808301926020929190829003018186803b15801561077057600080fd5b505afa158015610784573d6000803e3d6000fd5b505050506040513d602081101561079a57600080fd5b505190610aac565b600554604080516370a0823160e01b815230600482015290519293506000926107f99286926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b15801561077057600080fd5b9050811561081857600454610818906001600160a01b03163384610956565b801561083557600554610835906001600160a01b03163383610956565b909a909950975050505050505050565b6002546001600160a01b031681565b6006546001600160a01b0316331461089d5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e0d6024913960400191505060405180910390fd5b6001546040805163095ea7b360e01b81526001600160a01b039283166004820152600019602482015290519183169163095ea7b3916044808201926020929091908290030181600087803b1580156108f457600080fd5b505af1158015610908573d6000803e3d6000fd5b505050506040513d602081101561091e57600080fd5b505050565b6005546001600160a01b031681565b6001546001600160a01b031681565b6003546001600160a01b031681565b60075481565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261091e908490610b1c565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610a02908590610b1c565b50505050565b600082610a1757506000610a64565b82820282848281610a2457fe5b0414610a615760405162461bcd60e51b8152600401808060200182810382526021815260200180610e316021913960400191505060405180910390fd5b90505b92915050565b6000610a6183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610cd4565b6000610a6183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610d76565b6002546000906001600160a01b03848116911614610b1157600754821015610a61565b506008541115919050565b610b2e826001600160a01b0316610dd0565b610b7f576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610bbd5780518252601f199092019160209182019101610b9e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610c1f576040519150601f19603f3d011682016040523d82523d6000602084013e610c24565b606091505b509150915081610c7b576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610a0257808060200190516020811015610c9757600080fd5b5051610a025760405162461bcd60e51b815260040180806020018281038252602a815260200180610e52602a913960400191505060405180910390fd5b60008183610d605760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d25578181015183820152602001610d0d565b50505050905090810190601f168015610d525780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610d6c57fe5b0495945050505050565b60008184841115610dc85760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610d25578181015183820152602001610d0d565b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610e0457508115155b94935050505056fe53757065725a61703a2063616c6c6572206973206e6f7420746865206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212200c84df823c3331ec0488a21b65e6f85f14e289f0e8e5c4477e4271932876594c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x741AA610 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x741AA610 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x85499CFB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x984B163E EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xA7A21712 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xB9B5FD07 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xD0318D7E EQ PUSH2 0x1DB JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x2C426A8 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x1C15716B EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4D4AF36F EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x620B2C73 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24C JUMP JUMPDEST PUSH2 0xDB PUSH2 0x368 JUMP JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x845 JUMP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x854 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x923 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x932 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x941 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x950 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE0D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE0D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x337 JUMPI PUSH2 0x332 CALLER DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x309 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x363 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 DUP4 GT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642046554447452D4441492D4C502070657263656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x494 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND CALLER ADDRESS DUP8 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 DUP5 LT PUSH2 0x4B9 JUMPI DUP5 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x4CE PUSH1 0x64 PUSH2 0x4C8 DUP8 DUP8 PUSH2 0xA08 JUMP JUMPDEST SWAP1 PUSH2 0xA6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4DC DUP7 DUP4 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x542 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x5E3 DUP10 DUP6 PUSH2 0xAEE JUMP JUMPDEST ISZERO PUSH2 0x667 JUMPI PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x84767627 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 DUP4 AND PUSH1 0x44 DUP4 ADD MSTORE MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x84767627 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x67B JUMP JUMPDEST PUSH2 0x67B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND CALLER DUP7 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x685 DUP10 DUP5 PUSH2 0xAEE JUMP JUMPDEST ISZERO PUSH2 0x707 JUMPI PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x84767627 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP3 DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x84767627 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x71B JUMP JUMPDEST PUSH2 0x71B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND CALLER DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH2 0x7A2 SWAP3 DUP7 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x784 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x7F9 SWAP3 DUP7 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x818 JUMPI PUSH1 0x4 SLOAD PUSH2 0x818 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x956 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x835 JUMPI PUSH1 0x5 SLOAD PUSH2 0x835 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x956 JUMP JUMPDEST SWAP1 SWAP11 SWAP1 SWAP10 POP SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE0D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 DUP4 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x908 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x91E SWAP1 DUP5 SWAP1 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xA02 SWAP1 DUP6 SWAP1 PUSH2 0xB1C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA17 JUMPI POP PUSH1 0x0 PUSH2 0xA64 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xA24 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE31 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xB11 JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0xA61 JUMP JUMPDEST POP PUSH1 0x8 SLOAD GT ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2E DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0xB7F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xBBD JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xC7B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xA02 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE52 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD25 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD0D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD52 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xD6C JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xD25 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD0D JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xE04 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID MSTORE8 PUSH22 0x7065725A61703A2063616C6C6572206973206E6F7420 PUSH21 0x6865206F70657261746F72536166654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212200C84DF82 EXTCODECOPY CALLER BALANCE 0xEC DIV DUP9 LOG2 SHL PUSH6 0xE6F85F14E289 CREATE 0xE8 0xE5 0xC4 SELFBALANCE PUSH31 0x4271932876594C64736F6C634300060C003300000000000000000000000000 ",
							"sourceMap": "15881:3346:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16223:23;;;:::i;:::-;;;;;;;;;;;;;;;;16103;;;:::i;:::-;;;;-1:-1:-1;;;;;16103:23:0;;;;;;;;;;;;;;16912:147;;;;;;;;;;;;;;;;-1:-1:-1;16912:147:0;;;;;;;:::i;:::-;;17211:270;;;;;;;;;;;;;;;;-1:-1:-1;17211:270:0;-1:-1:-1;;;;;17211:270:0;;:::i;16163:23::-;;;:::i;17665:1559::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17665:1559:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16051:19;;;:::i;17067:136::-;;;;;;;;;;;;;;;;-1:-1:-1;17067:136:0;-1:-1:-1;;;;;17067:136:0;;:::i;16133:23::-;;;:::i;16023:21::-;;;:::i;16077:19::-;;;:::i;16193:23::-;;;:::i;16223:::-;;;;:::o;16103:::-;;;-1:-1:-1;;;;;16103:23:0;;:::o;16912:147::-;16821:8;;-1:-1:-1;;;;;16821:8:0;16833:10;16821:22;16813:71;;;;-1:-1:-1;;;16813:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17000:8:::1;:20:::0;;;;17031:8:::1;:20:::0;16912:147::o;17211:270::-;16821:8;;-1:-1:-1;;;;;16821:8:0;16833:10;16821:22;16813:71;;;;-1:-1:-1;;;16813:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17281:19:0;::::1;::::0;17277:196:::1;;17315:78;17342:10;17361:5;-1:-1:-1::0;;;;;17354:23:0::1;;17386:4;17354:38;;;;;;;;;;;;;-1:-1:-1::0;;;;;17354:38:0::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;17354:38:0;-1:-1:-1;;;;;17315:26:0;::::1;::::0;:78;:26:::1;:78::i;:::-;17277:196;;;17422:51;::::0;17430:10:::1;::::0;17451:21:::1;17422:51:::0;::::1;;;::::0;::::1;::::0;;;17451:21;17430:10;17422:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;17277:196;17211:270:::0;:::o;16163:23::-;;;-1:-1:-1;;;;;16163:23:0;;:::o;17665:1559::-;17758:7;17767;17813:3;17795:14;:21;;17787:62;;;;;-1:-1:-1;;;17787:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;17906:6;17875:4;-1:-1:-1;;;;;17868:22:0;;17891:10;17868:34;;;;;;;;;;;;;-1:-1:-1;;;;;17868:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17868:34:0;:44;;17860:77;;;;;-1:-1:-1;;;17860:77:0;;;;;;;;;;;;-1:-1:-1;;;17860:77:0;;;;;;;;;;;;;;;17948:64;-1:-1:-1;;;;;17948:29:0;;17978:10;17998:4;18005:6;17948:29;:64::i;:::-;18025:23;18068:3;18051:14;:20;:67;;18112:6;18051:67;;;18074:35;18105:3;18074:26;:6;18085:14;18074:10;:26::i;:::-;:30;;:35::i;:::-;18025:93;-1:-1:-1;18129:23:0;18155:27;:6;18025:93;18155:10;:27::i;:::-;18217:9;;;:34;;;-1:-1:-1;;;18217:34:0;;18245:4;18217:34;;;;;;;;18129:53;;-1:-1:-1;18195:19:0;;-1:-1:-1;;;;;18217:9:0;;;;:19;;:34;;;;;;;;;;;;;;:9;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18217:34:0;18284:9;;:34;;;-1:-1:-1;;;18284:34:0;;18312:4;18284:34;;;;;;18217;;-1:-1:-1;18262:19:0;;-1:-1:-1;;;;;18284:9:0;;;;:19;;:34;;;;;18217;;18284;;;;;;;;:9;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18284:34:0;;-1:-1:-1;18343:32:0;18353:4;18359:15;18343:9;:32::i;:::-;18339:214;;;18392:6;;18443:9;;;18392:62;;;-1:-1:-1;;;18392:62:0;;-1:-1:-1;;;;;18392:62:0;;;;;;;;;;;;;;;;18443:9;;;18392:62;;;;;:6;;;;;:19;;:62;;;;;:6;;:62;;;;;;;:6;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18339:214;;;18487:54;-1:-1:-1;;;;;18487:25:0;;18513:10;18525:15;18487:25;:54::i;:::-;18567:32;18577:4;18583:15;18567:9;:32::i;:::-;18563:214;;;18616:6;;18667:9;;18616:62;;;-1:-1:-1;;;18616:62:0;;-1:-1:-1;;;;;18616:62:0;;;;;;;;;;;;;18667:9;;;18616:62;;;;;;:6;;;;;:19;;:62;;;;;:6;;:62;;;;;;;:6;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18563:214;;;18711:54;-1:-1:-1;;;;;18711:25:0;;18737:10;18749:15;18711:25;:54::i;:::-;18813:9;;;:34;;;-1:-1:-1;;;18813:34:0;;18841:4;18813:34;;;;;;;;18789:21;;18813:51;;18852:11;;-1:-1:-1;;;;;18813:9:0;;;;:19;;:34;;;;;;;;;;;;;;:9;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18813:34:0;;:38;:51::i;:::-;18899:9;;:34;;;-1:-1:-1;;;18899:34:0;;18927:4;18899:34;;;;;;18789:75;;-1:-1:-1;18875:21:0;;18899:51;;18938:11;;-1:-1:-1;;;;;18899:9:0;;;;:19;;:34;;;;;;;;;;;;;;;:9;:34;;;;;;;;;;:51;18875:75;-1:-1:-1;18975:17:0;;18971:86;;19007:9;;:50;;-1:-1:-1;;;;;19007:9:0;19030:10;19043:13;19007:22;:50::i;:::-;19072:17;;19068:86;;19104:9;;:50;;-1:-1:-1;;;;;19104:9:0;19127:10;19140:13;19104:22;:50::i;:::-;19187:13;;;;-1:-1:-1;17665:1559:0;-1:-1:-1;;;;;;;;17665:1559:0:o;16051:19::-;;;-1:-1:-1;;;;;16051:19:0;;:::o;17067:136::-;16821:8;;-1:-1:-1;;;;;16821:8:0;16833:10;16821:22;16813:71;;;;-1:-1:-1;;;16813:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17168:6:::1;::::0;17138:57:::1;::::0;;-1:-1:-1;;;17138:57:0;;-1:-1:-1;;;;;17168:6:0;;::::1;17138:57;::::0;::::1;::::0;-1:-1:-1;;17138:57:0;;;;;;:21;;::::1;::::0;::::1;::::0;:57;;;;;::::1;::::0;;;;;;;;;17168:6:::1;17138:21:::0;:57;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;17067:136:0:o;16133:23::-;;;-1:-1:-1;;;;;16133:23:0;;:::o;16023:21::-;;;-1:-1:-1;;;;;16023:21:0;;:::o;16077:19::-;;;-1:-1:-1;;;;;16077:19:0;;:::o;16193:23::-;;;;:::o;11769:177::-;11879:58;;;-1:-1:-1;;;;;11879:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11879:58:0;-1:-1:-1;;;11879:58:0;;;11852:86;;11872:5;;11852:19;:86::i;11954:205::-;12082:68;;;-1:-1:-1;;;;;12082:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12082:68:0;-1:-1:-1;;;12082:68:0;;;12055:96;;12075:5;;12055:19;:96::i;:::-;11954:205;;;;:::o;5233:471::-;5291:7;5536:6;5532:47;;-1:-1:-1;5566:1:0;5559:8;;5532:47;5603:5;;;5607:1;5603;:5;:1;5627:5;;;;;:10;5619:56;;;;-1:-1:-1;;;5619:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5695:1;-1:-1:-1;5233:471:0;;;;;:::o;6172:132::-;6230:7;6257:39;6261:1;6264;6257:39;;;;;;;;;;;;;;;;;:3;:39::i;4359:136::-;4417:7;4444:43;4448:1;4451;4444:43;;;;;;;;;;;;;;;;;:3;:43::i;17489:168::-;17601:5;;17561:4;;-1:-1:-1;;;;;17585:22:0;;;17601:5;;17585:22;:64;;17641:8;;17631:6;:18;;17585:64;;;-1:-1:-1;17620:8:0;;-1:-1:-1;17610:18:0;;17489:168;-1:-1:-1;17489:168:0:o;13813:1115::-;14418:27;14426:5;-1:-1:-1;;;;;14418:25:0;;:27::i;:::-;14410:71;;;;;-1:-1:-1;;;14410:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;14555:12;14569:23;14604:5;-1:-1:-1;;;;;14596:19:0;14616:4;14596:25;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14596:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14554:67;;;;14640:7;14632:52;;;;;-1:-1:-1;;;14632:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14701:17;;:21;14697:224;;14843:10;14832:30;;;;;;;;;;;;;;;-1:-1:-1;14832:30:0;14824:85;;;;-1:-1:-1;;;14824:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6792:345;6878:7;6980:12;6973:5;6965:28;;;;-1:-1:-1;;;6965:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7004:9;7020:1;7016;:5;;;;;;;6792:345;-1:-1:-1;;;;;6792:345:0:o;4790:192::-;4876:7;4912:12;4904:6;;;;4896:29;;;;-1:-1:-1;;;4896:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4948:5:0;;;4790:192::o;9148:619::-;9208:4;9676:20;;9519:66;9716:23;;;;;;:42;;-1:-1:-1;9743:15:0;;;9716:42;9708:51;9148:619;-1:-1:-1;;;;9148:619:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "752200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approveZapper(address)": "infinite",
								"fudge()": "1037",
								"fudgePair()": "1060",
								"minFudge()": "999",
								"minStraw()": "1108",
								"operator()": "1126",
								"setMins(uint256,uint256)": "infinite",
								"straw()": "1125",
								"strawPair()": "1081",
								"withdraw(address)": "infinite",
								"zapStrategy(address,uint256,uint256)": "infinite",
								"zapper()": "1103"
							},
							"internal": {
								"_checkMin(address,uint256)": "1704"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15881,
									"end": 19227,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 15881,
									"end": 19227,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15881,
									"end": 19227,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16380,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16399,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16415,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16410,
									"end": 16432,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16448,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16443,
									"end": 16465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16485,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16476,
									"end": 16506,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16526,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16517,
									"end": 16547,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16558,
									"end": 16566,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 16558,
									"end": 16579,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16558,
									"end": 16579,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16558,
									"end": 16579,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16558,
									"end": 16579,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 16558,
									"end": 16579,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16569,
									"end": 16579,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 16558,
									"end": 16579,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16558,
									"end": 16579,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16558,
									"end": 16579,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 16558,
									"end": 16579,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16601,
									"end": 16614,
									"name": "PUSH",
									"source": 0,
									"value": "1C6BF52634000"
								},
								{
									"begin": 16590,
									"end": 16598,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 16590,
									"end": 16614,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16636,
									"end": 16640,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 16625,
									"end": 16633,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 16625,
									"end": 16640,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16675,
									"end": 16681,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 16675,
									"end": 16681,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16675,
									"end": 16681,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16658,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16658,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16666,
									"name": "PUSH",
									"source": 0,
									"value": "95EA7B3"
								},
								{
									"begin": 16653,
									"end": 16666,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16255,
									"end": 16770,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16374,
									"end": 16380,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16653,
									"end": 16658,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16713,
									"end": 16718,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 16713,
									"end": 16718,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16718,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16735,
									"end": 16741,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16735,
									"end": 16741,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16735,
									"end": 16741,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16735,
									"end": 16741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16718,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16718,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16718,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16718,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16718,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16726,
									"name": "PUSH",
									"source": 0,
									"value": "95EA7B3"
								},
								{
									"begin": 16713,
									"end": 16726,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16653,
									"end": 16702,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16718,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16713,
									"end": 16718,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 16713,
									"end": 16762,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15881,
									"end": 19227,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15881,
									"end": 19227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15881,
									"end": 19227,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15881,
									"end": 19227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15881,
									"end": 19227,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15881,
									"end": 19227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15881,
									"end": 19227,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c84df823c3331ec0488a21b65e6f85f14e289f0e8e5c4477e4271932876594c64736f6c634300060c0033",
									".code": [
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "741AA610"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "741AA610"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "85499CFB"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "984B163E"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "A7A21712"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "B9B5FD07"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "D0318D7E"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "2C426A8"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "1C15716B"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "4D4AF36F"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "51CFF8D9"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "620B2C73"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 19227,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16246,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16103,
											"end": 16126,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16821,
											"end": 16829,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16821,
											"end": 16829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16821,
											"end": 16829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 16843,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16821,
											"end": 16843,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH data",
											"source": 0,
											"value": "40960C214819EAD63FEFDD8DAACEDC8FF37EA1CB3D93EDEDABCE0E8931268929"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17000,
											"end": 17008,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17000,
											"end": 17020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17000,
											"end": 17020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17000,
											"end": 17020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17000,
											"end": 17020,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17031,
											"end": 17039,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17031,
											"end": 17051,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17059,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16821,
											"end": 16829,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16821,
											"end": 16829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16821,
											"end": 16829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 16843,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16821,
											"end": 16843,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH data",
											"source": 0,
											"value": "40960C214819EAD63FEFDD8DAACEDC8FF37EA1CB3D93EDEDABCE0E8931268929"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17281,
											"end": 17300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17281,
											"end": 17300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17281,
											"end": 17300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17277,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17277,
											"end": 17473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17342,
											"end": 17352,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17361,
											"end": 17366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17354,
											"end": 17377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17377,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17386,
											"end": 17390,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17354,
											"end": 17392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17315,
											"end": 17341,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17315,
											"end": 17341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17315,
											"end": 17393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17315,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17315,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17277,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17277,
											"end": 17473,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17277,
											"end": 17473,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17277,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17430,
											"end": 17440,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17430,
											"end": 17440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17451,
											"end": 17472,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17451,
											"end": 17472,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17430,
											"end": 17440,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17277,
											"end": 17473,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17277,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17481,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16163,
											"end": 16186,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17767,
											"end": 17774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17813,
											"end": 17816,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17795,
											"end": 17809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "PUSH",
											"source": 0,
											"value": "496E76616C69642046554447452D4441492D4C502070657263656E7400000000"
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 17787,
											"end": 17849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17906,
											"end": 17912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17868,
											"end": 17890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17890,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17891,
											"end": 17901,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17868,
											"end": 17902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17912,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 17912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 17860,
											"end": 17937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17948,
											"end": 18012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17948,
											"end": 17977,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17948,
											"end": 17977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17978,
											"end": 17988,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17998,
											"end": 18002,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18011,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17948,
											"end": 17977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 17948,
											"end": 18012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17948,
											"end": 18012,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 17948,
											"end": 18012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18068,
											"end": 18071,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18051,
											"end": 18065,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18051,
											"end": 18071,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18051,
											"end": 18118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 18051,
											"end": 18118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18112,
											"end": 18118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18051,
											"end": 18118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 18051,
											"end": 18118,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18051,
											"end": 18118,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 18051,
											"end": 18118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18074,
											"end": 18109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 18105,
											"end": 18108,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18074,
											"end": 18100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 18074,
											"end": 18080,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18099,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18074,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18074,
											"end": 18100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18074,
											"end": 18100,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 18074,
											"end": 18100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18074,
											"end": 18104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18074,
											"end": 18104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 18074,
											"end": 18109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18074,
											"end": 18109,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 18074,
											"end": 18109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18129,
											"end": 18152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18155,
											"end": 18182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 18155,
											"end": 18161,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18155,
											"end": 18165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 18155,
											"end": 18182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18155,
											"end": 18182,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 18155,
											"end": 18182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18226,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18217,
											"end": 18226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18245,
											"end": 18249,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18129,
											"end": 18182,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18129,
											"end": 18182,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18195,
											"end": 18214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18195,
											"end": 18214,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18217,
											"end": 18226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 18217,
											"end": 18236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18226,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18293,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18284,
											"end": 18293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18312,
											"end": 18316,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18262,
											"end": 18281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18262,
											"end": 18281,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18284,
											"end": 18293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18303,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 18284,
											"end": 18303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18217,
											"end": 18251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18293,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18284,
											"end": 18318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18343,
											"end": 18375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 18353,
											"end": 18357,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18359,
											"end": 18374,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18343,
											"end": 18352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18343,
											"end": 18375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18343,
											"end": 18375,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 18343,
											"end": 18375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18339,
											"end": 18553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18339,
											"end": 18553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 18339,
											"end": 18553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18443,
											"end": 18452,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18443,
											"end": 18452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18443,
											"end": 18452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84767627"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18443,
											"end": 18452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18443,
											"end": 18452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18443,
											"end": 18452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18411,
											"name": "PUSH",
											"source": 0,
											"value": "84767627"
										},
										{
											"begin": 18392,
											"end": 18411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18398,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18392,
											"end": 18454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18339,
											"end": 18553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 18339,
											"end": 18553,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18339,
											"end": 18553,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 18339,
											"end": 18553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18487,
											"end": 18541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18487,
											"end": 18512,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18487,
											"end": 18512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18513,
											"end": 18523,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18525,
											"end": 18540,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18487,
											"end": 18512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 18487,
											"end": 18541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18487,
											"end": 18541,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 18487,
											"end": 18541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18567,
											"end": 18599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18577,
											"end": 18581,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18598,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18567,
											"end": 18576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18567,
											"end": 18599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18567,
											"end": 18599,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18567,
											"end": 18599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18563,
											"end": 18777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18563,
											"end": 18777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18563,
											"end": 18777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18667,
											"end": 18676,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18667,
											"end": 18676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84767627"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18667,
											"end": 18676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18667,
											"end": 18676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18667,
											"end": 18676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18635,
											"name": "PUSH",
											"source": 0,
											"value": "84767627"
										},
										{
											"begin": 18616,
											"end": 18635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18563,
											"end": 18777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 18563,
											"end": 18777,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18563,
											"end": 18777,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18563,
											"end": 18777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18711,
											"end": 18765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18711,
											"end": 18736,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18711,
											"end": 18736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18737,
											"end": 18747,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18749,
											"end": 18764,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18711,
											"end": 18736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 18711,
											"end": 18765,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18711,
											"end": 18765,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 18711,
											"end": 18765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18813,
											"end": 18822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18845,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18789,
											"end": 18810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18789,
											"end": 18810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18813,
											"end": 18864,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18852,
											"end": 18863,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18852,
											"end": 18863,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18813,
											"end": 18822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18832,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 18813,
											"end": 18832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18822,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 18813,
											"end": 18864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18813,
											"end": 18864,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18813,
											"end": 18864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18908,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18899,
											"end": 18908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18927,
											"end": 18931,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18789,
											"end": 18864,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18789,
											"end": 18864,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18875,
											"end": 18896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18875,
											"end": 18896,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 18899,
											"end": 18950,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18938,
											"end": 18949,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18938,
											"end": 18949,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18899,
											"end": 18908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18918,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 18899,
											"end": 18918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18908,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18899,
											"end": 18950,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 18899,
											"end": 18950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18875,
											"end": 18950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18975,
											"end": 18992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 18992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18971,
											"end": 19057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18971,
											"end": 19057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19007,
											"end": 19016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19007,
											"end": 19057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19007,
											"end": 19016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19030,
											"end": 19040,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19043,
											"end": 19056,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19007,
											"end": 19029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19007,
											"end": 19057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19007,
											"end": 19057,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19007,
											"end": 19057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19089,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19068,
											"end": 19154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 19068,
											"end": 19154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19104,
											"end": 19113,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19104,
											"end": 19113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19104,
											"end": 19154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 19104,
											"end": 19154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19104,
											"end": 19113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19127,
											"end": 19137,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19104,
											"end": 19126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19104,
											"end": 19154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19104,
											"end": 19154,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 19104,
											"end": 19154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19187,
											"end": 19200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19187,
											"end": 19200,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 19187,
											"end": 19200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19187,
											"end": 19200,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17665,
											"end": 19224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16821,
											"end": 16829,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16821,
											"end": 16829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16821,
											"end": 16829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 16843,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16821,
											"end": 16843,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH data",
											"source": 0,
											"value": "40960C214819EAD63FEFDD8DAACEDC8FF37EA1CB3D93EDEDABCE0E8931268929"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16813,
											"end": 16884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17174,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17168,
											"end": 17174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17168,
											"end": 17174,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17159,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 17138,
											"end": 17159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17159,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17138,
											"end": 17195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17067,
											"end": 17203,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16156,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16023,
											"end": 16044,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16077,
											"end": 16096,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16216,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11769,
											"end": 11946,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 11769,
											"end": 11946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11879,
											"end": 11937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11852,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11852,
											"end": 11938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11872,
											"end": 11877,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11872,
											"end": 11877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11852,
											"end": 11871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11852,
											"end": 11938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11954,
											"end": 12159,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 11954,
											"end": 12159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12055,
											"end": 12151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 12055,
											"end": 12151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12055,
											"end": 12074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12055,
											"end": 12151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12055,
											"end": 12151,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 12055,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11954,
											"end": 12159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11954,
											"end": 12159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11954,
											"end": 12159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11954,
											"end": 12159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11954,
											"end": 12159,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5233,
											"end": 5704,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5233,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5532,
											"end": 5579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5559,
											"end": 5567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5579,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5532,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5608,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5627,
											"end": 5632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5632,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5632,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5627,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5632,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5637,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5704,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5233,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5704,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5704,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6172,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6172,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6230,
											"end": 6237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6261,
											"end": 6262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6264,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6257,
											"end": 6296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4495,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4359,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4448,
											"end": 4449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17489,
											"end": 17657,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17489,
											"end": 17657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17601,
											"end": 17606,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17601,
											"end": 17606,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17561,
											"end": 17565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17561,
											"end": 17565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17585,
											"end": 17607,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17585,
											"end": 17607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17585,
											"end": 17607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17601,
											"end": 17606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17601,
											"end": 17606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17585,
											"end": 17607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17585,
											"end": 17649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17585,
											"end": 17649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17641,
											"end": 17649,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17641,
											"end": 17649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17649,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17585,
											"end": 17649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17585,
											"end": 17649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17585,
											"end": 17649,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17585,
											"end": 17649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17620,
											"end": 17628,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17620,
											"end": 17628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 17610,
											"end": 17628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17610,
											"end": 17628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17489,
											"end": 17657,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13813,
											"end": 14928,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13813,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14418,
											"end": 14445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 14426,
											"end": 14431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14418,
											"end": 14443,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14418,
											"end": 14443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 14418,
											"end": 14445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14418,
											"end": 14445,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 14418,
											"end": 14445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 14410,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14555,
											"end": 14567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14569,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14604,
											"end": 14609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14596,
											"end": 14615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14616,
											"end": 14620,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14596,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14554,
											"end": 14621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14554,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14554,
											"end": 14621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14554,
											"end": 14621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14640,
											"end": 14647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14632,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14701,
											"end": 14718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14701,
											"end": 14718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14701,
											"end": 14722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14697,
											"end": 14921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14697,
											"end": 14921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14832,
											"end": 14862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "PUSH data",
											"source": 0,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14909,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 7137,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6792,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6878,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6980,
											"end": 6992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 6978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6965,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7004,
											"end": 7013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7017,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 7137,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6792,
											"end": 7137,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4790,
											"end": 4982,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4790,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4876,
											"end": 4883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4982,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9148,
											"end": 9767,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 9148,
											"end": 9767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9208,
											"end": 9212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9676,
											"end": 9696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9676,
											"end": 9696,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 9519,
											"end": 9585,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 9716,
											"end": 9739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9739,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9716,
											"end": 9758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9743,
											"end": 9758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9743,
											"end": 9758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9743,
											"end": 9758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9758,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9716,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9759,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9767,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9148,
											"end": 9767,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"40960C214819EAD63FEFDD8DAACEDC8FF37EA1CB3D93EDEDABCE0E8931268929": "53757065725a61703a2063616c6c6572206973206e6f7420746865206f70657261746f72",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"approveZapper(address)": "85499cfb",
							"fudge()": "741aa610",
							"fudgePair()": "1c15716b",
							"minFudge()": "02c426a8",
							"minStraw()": "d0318d7e",
							"operator()": "570ca735",
							"setMins(uint256,uint256)": "4d4af36f",
							"straw()": "b9b5fd07",
							"strawPair()": "984b163e",
							"withdraw(address)": "51cff8d9",
							"zapStrategy(address,uint256,uint256)": "620b2c73",
							"zapper()": "a7a21712"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zapper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fudge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_straw\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fudgePair\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strawPair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"approveZapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fudge\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fudgePair\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFudge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minStraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minFudge\",\"type\":\"uint256\"}],\"name\":\"setMins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"straw\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strawPair\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentFudgeLP\",\"type\":\"uint256\"}],\"name\":\"zapStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zapper\",\"outputs\":[{\"internalType\":\"contract IZapper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Super-Zap.sol\":\"SuperZap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Super-Zap.sol\":{\"keccak256\":\"0xee5d5d1fe214e4bfa712a77489b17e5303d030f83c8ab065e503ffdaaa9edb2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29fc440f26b8a73b828d578b001d3da74fb455ce05265a52d18fe7703a2fcfb8\",\"dweb:/ipfs/QmYB7XVBAvA9YpCQcDGWTsUaoyN2F1Mu3KKctpZ26SGMAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 566,
								"contract": "contracts/Super-Zap.sol:SuperZap",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 657,
								"contract": "contracts/Super-Zap.sol:SuperZap",
								"label": "zapper",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IZapper)644"
							},
							{
								"astId": 659,
								"contract": "contracts/Super-Zap.sol:SuperZap",
								"label": "fudge",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 661,
								"contract": "contracts/Super-Zap.sol:SuperZap",
								"label": "straw",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 663,
								"contract": "contracts/Super-Zap.sol:SuperZap",
								"label": "fudgePair",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 665,
								"contract": "contracts/Super-Zap.sol:SuperZap",
								"label": "strawPair",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 667,
								"contract": "contracts/Super-Zap.sol:SuperZap",
								"label": "operator",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 669,
								"contract": "contracts/Super-Zap.sol:SuperZap",
								"label": "minStraw",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 671,
								"contract": "contracts/Super-Zap.sol:SuperZap",
								"label": "minFudge",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IZapper)644": {
								"encoding": "inplace",
								"label": "contract IZapper",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Super-Zap.sol": {
				"ast": {
					"absolutePath": "contracts/Super-Zap.sol",
					"exportedSymbols": {
						"Address": [
							335
						],
						"ContractGuard": [
							633
						],
						"IERC20": [
							77
						],
						"IZapper": [
							644
						],
						"SafeERC20": [
							559
						],
						"SafeMath": [
							272
						],
						"SuperZap": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "238:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "265:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "363:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "457:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "483:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "482:9:0"
									},
									"scope": 77,
									"src": "437:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "500:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "599:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "598:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "639:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:9:0"
									},
									"scope": 77,
									"src": "580:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "656:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "895:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "914:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "894:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "948:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "948:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "947:6:0"
									},
									"scope": 77,
									"src": "877:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "962:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1257:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1272:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1256:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1312:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1311:9:0"
									},
									"scope": 77,
									"src": "1238:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1329:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "2007:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "2024:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2006:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "2058:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2058:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2057:6:0"
									},
									"scope": 77,
									"src": "1990:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2072:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2404:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2420:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2439:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2403:51:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2473:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2473:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2472:6:0"
									},
									"scope": 77,
									"src": "2382:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2487:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2671:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2693:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2713:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2670:57:0"
									},
									"src": "2656:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2736:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2908:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2931:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2956:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2907:63:0"
									},
									"src": "2893:78:0"
								}
							],
							"scope": 1079,
							"src": "339:2635:0"
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3044:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3071:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 272,
							"linearizedBaseContracts": [
								272
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "3970:114:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 104,
														"src": "3981:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "3993:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "3997:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3993:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3981:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 96,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "4017:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 97,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "4022:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4017:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4025:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4009:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "4009:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "4075:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 88,
												"id": 103,
												"nodeType": "Return",
												"src": "4068:8:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3672:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "3916:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "3927:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3915:22:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "3961:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3960:9:0"
									},
									"scope": 272,
									"src": "3903:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "4426:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 116,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "4448:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 117,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "4451:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4454:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 115,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															122,
															150
														],
														"referencedDeclaration": 150,
														"src": "4444:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4444:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 114,
												"id": 120,
												"nodeType": "Return",
												"src": "4437:50:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "4092:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "4372:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "4383:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4371:22:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "4417:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4416:9:0"
									},
									"scope": 272,
									"src": "4359:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4885:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 135,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "4904:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 136,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "4909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4904:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 138,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "4912:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4896:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "4896:29:0"
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 149,
														"src": "4936:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 141,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4936:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 143,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "4948:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 144,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "4952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4936:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 147,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "4973:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 148,
												"nodeType": "Return",
												"src": "4966:8:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4503:281:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4803:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4814:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4825:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4825:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4802:50:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4876:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4875:9:0"
									},
									"scope": 272,
									"src": "4790:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "5300:404:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 160,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "5536:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5541:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 166,
												"nodeType": "IfStatement",
												"src": "5532:47:0",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "5544:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 159,
															"id": 164,
															"nodeType": "Return",
															"src": "5559:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 184,
														"src": "5591:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5591:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 172,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "5603:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "5607:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5603:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5591:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 174,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "5627:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 175,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "5631:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5627:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 177,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "5636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5627:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5639:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5619:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5619:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "5619:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 182,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "5695:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 159,
												"id": 183,
												"nodeType": "Return",
												"src": "5688:8:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4990:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "5246:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "5257:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5245:22:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "5291:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5290:9:0"
									},
									"scope": 272,
									"src": "5233:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "6239:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 196,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "6261:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 197,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "6264:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6267:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 195,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															202,
															230
														],
														"referencedDeclaration": 230,
														"src": "6257:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6257:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 194,
												"id": 200,
												"nodeType": "Return",
												"src": "6250:46:0"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "5712:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "6185:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "6196:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6184:22:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "6230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6229:9:0"
									},
									"scope": 272,
									"src": "6172:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "6887:250:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 215,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "6973:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6977:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 218,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "6980:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6965:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6965:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "6965:28:0"
											},
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 229,
														"src": "7004:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7004:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 223,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "7016:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 224,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "7020:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7016:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7004:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 227,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 222,
													"src": "7128:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 213,
												"id": 228,
												"nodeType": "Return",
												"src": "7121:8:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "6312:474:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6805:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6827:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6827:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6804:50:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6877:9:0"
									},
									"scope": 272,
									"src": "6792:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "7661:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 241,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7683:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 242,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "7686:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7689:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 240,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															247,
															271
														],
														"referencedDeclaration": 271,
														"src": "7679:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7679:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 245,
												"nodeType": "Return",
												"src": "7672:44:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "7145:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7607:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7618:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7606:22:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7651:9:0"
									},
									"scope": 272,
									"src": "7594:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "8296:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "8315:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8320:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8315:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 263,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "8323:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8307:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "8307:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "8354:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 267,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "8358:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 258,
												"id": 269,
												"nodeType": "Return",
												"src": "8347:12:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "7732:463:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "8214:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "8225:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "8236:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8236:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8213:50:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "8287:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8286:9:0"
									},
									"scope": 272,
									"src": "8201:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1079,
							"src": "3648:4722:0"
						},
						{
							"id": 273,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "8440:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 274,
								"nodeType": "StructuredDocumentation",
								"src": "8467:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "9214:553:0",
										"statements": [
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 299,
														"src": "9470:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 282,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9470:16:0"
											},
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 299,
														"src": "9497:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 285,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9497:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9519:66:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9497:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9662:36:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9664:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "9688:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "9676:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9676:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "9664:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 277,
														"isOffset": false,
														"isSlot": false,
														"src": "9688:7:0",
														"valueSize": 1
													},
													{
														"declaration": 283,
														"isOffset": false,
														"isSlot": false,
														"src": "9664:8:0",
														"valueSize": 1
													}
												],
												"id": 289,
												"nodeType": "InlineAssembly",
												"src": "9653:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 290,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "9716:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 291,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "9728:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "9716:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 293,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "9743:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9755:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "9743:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9716:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 297,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9715:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 281,
												"id": 298,
												"nodeType": "Return",
												"src": "9708:51:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "8561:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "9168:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9167:17:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "9208:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9208:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9207:6:0"
									},
									"scope": 335,
									"src": "9148:619:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "10773:326:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 311,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "10800:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$335",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$335",
																				"typeString": "library Address"
																			}
																		],
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10792:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 309,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10792:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10792:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10792:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 314,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "10817:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10792:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10825:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10784:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "10784:73:0"
											},
											{
												"assignments": [
													320,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 333,
														"src": "10949:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 319,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10949:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 327,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10999:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 321,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "10967:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10967:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 323,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "10990:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10967:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10967:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10948:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 329,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "11021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11030:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11013:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "11013:78:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "9775:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "10721:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10721:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "10748:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10720:43:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10773:0:0"
									},
									"scope": 335,
									"src": "10702:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1079,
							"src": "8538:2564:0"
						},
						{
							"id": 336,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11180:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 337,
								"nodeType": "StructuredDocumentation",
								"src": "11211:464:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 559,
							"linearizedBaseContracts": [
								559
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 340,
									"libraryName": {
										"contractScope": null,
										"id": 338,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 272,
										"src": "11708:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$272",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11702:27:0",
									"typeName": {
										"id": 339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11721:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 343,
									"libraryName": {
										"contractScope": null,
										"id": 341,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 335,
										"src": "11741:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$335",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11735:26:0",
									"typeName": {
										"id": 342,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11753:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "11841:105:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 353,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "11872:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 356,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 345,
																			"src": "11902:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "11902:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11902:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 359,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "11927:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 360,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "11931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 354,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "11879:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11879:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11879:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 352,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "11852:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11852:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "11852:86:0"
											}
										]
									},
									"documentation": null,
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "11791:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 344,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "11791:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "11805:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "11817:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11790:41:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11841:0:0"
									},
									"scope": 559,
									"src": "11769:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "12044:115:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "12075:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 380,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "12105:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 58,
																		"src": "12105:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "12105:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 383,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "12134:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 384,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "12140:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 385,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "12144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 378,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "12082:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12082:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12082:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 376,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "12055:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12055:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "12055:96:0"
											}
										]
									},
									"documentation": null,
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 390,
												"src": "11980:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 366,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "11980:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 390,
												"src": "11994:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 390,
												"src": "12008:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 390,
												"src": "12020:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11979:55:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12044:0:0"
									},
									"scope": 559,
									"src": "11954:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "12243:546:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 400,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "12537:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12546:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "12537:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 403,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12536:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 408,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "12577:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$559",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$559",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 407,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "12569:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 406,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "12569:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12569:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 410,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 394,
																					"src": "12584:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 404,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 392,
																					"src": "12553:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 405,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 36,
																				"src": "12553:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12553:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12596:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "12553:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 414,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12552:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12536:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12613:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12528:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12528:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "12528:152:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 420,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "12711:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 423,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 392,
																			"src": "12741:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "12741:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "12741:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 426,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "12765:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "12774:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 421,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "12718:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12718:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12718:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 419,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "12691:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12691:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "12691:90:0"
											}
										]
									},
									"documentation": null,
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 432,
												"src": "12188:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 391,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "12188:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 432,
												"src": "12202:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 432,
												"src": "12219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12187:46:0"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12243:0:0"
									},
									"scope": 559,
									"src": "12167:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "12883:200:0",
										"statements": [
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 467,
														"src": "12894:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 452,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "12961:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 447,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "12941:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$559",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$559",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12933:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 445,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12933:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12933:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 449,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "12948:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 443,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "12917:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "12917:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12917:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 105,
														"src": "12917:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12917:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12894:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 456,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "12998:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 459,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "13028:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "13028:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13028:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 462,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "13052:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 463,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "13061:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 457,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "13005:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13005:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13005:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 455,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "12978:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12978:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "12978:97:0"
											}
										]
									},
									"documentation": null,
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "12828:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 433,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "12828:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "12842:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "12859:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12827:46:0"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12883:0:0"
									},
									"scope": 559,
									"src": "12797:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "13177:245:0",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 504,
														"src": "13188:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 488,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "13255:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13262:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 483,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "13235:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$559",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$559",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13227:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 481,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "13227:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13227:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 485,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "13242:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 479,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "13211:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "13211:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13211:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "13211:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13211:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13188:118:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 493,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13337:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 496,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "13367:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "13367:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13367:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 499,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "13391:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 500,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "13400:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 494,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "13344:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13344:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13344:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 492,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "13317:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13317:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "13317:97:0"
											}
										]
									},
									"documentation": null,
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "13122:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 469,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "13122:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "13136:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "13153:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13121:46:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13177:0:0"
									},
									"scope": 559,
									"src": "13091:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "13883:1045:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 516,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "14426:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14418:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 514,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14418:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14418:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 300,
																"src": "14418:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14418:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14447:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14410:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "14410:71:0"
											},
											{
												"assignments": [
													524,
													526
												],
												"declarations": [
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 557,
														"src": "14555:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 523,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14555:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 526,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 557,
														"src": "14569:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 525,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14569:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 534,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 532,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "14616:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 529,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "14604:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14596:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14596:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14596:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "14596:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14596:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14554:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 536,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "14640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14649:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14632:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "14632:52:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 540,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14701:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "14701:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14721:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14701:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 556,
												"nodeType": "IfStatement",
												"src": "14697:224:0",
												"trueBody": {
													"id": 555,
													"nodeType": "Block",
													"src": "14724:197:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 547,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "14843:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 549,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14856:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 548,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "14856:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 550,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "14855:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "14832:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "14832:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14832:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14864:44:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 544,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "14824:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14824:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "14824:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "13430:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 558,
												"src": "13842:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 507,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "13842:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 558,
												"src": "13856:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13841:33:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13883:0:0"
									},
									"scope": 559,
									"src": "13813:1115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1079,
							"src": "11677:3254:0"
						},
						{
							"id": 560,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "14982:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 633,
							"linearizedBaseContracts": [
								633
							],
							"name": "ContractGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 566,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 633,
									"src": "15039:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 565,
										"keyType": {
											"id": 561,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "15047:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "15039:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueType": {
											"id": 564,
											"keyType": {
												"id": 562,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "15066:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "15058:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 563,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "15077:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "15175:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 571,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "15193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(uint256 => mapping(address => bool))"
															}
														},
														"id": 574,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 572,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "15201:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15201:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15193:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 577,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 575,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -26,
															"src": "15215:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15215:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15193:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 570,
												"id": 578,
												"nodeType": "Return",
												"src": "15186:39:0"
											}
										]
									},
									"documentation": null,
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSameOriginReentranted",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15143:2:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 580,
												"src": "15169:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15169:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15168:6:0"
									},
									"scope": 633,
									"src": "15108:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "15308:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 585,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "15326:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(uint256 => mapping(address => bool))"
															}
														},
														"id": 588,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 586,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "15334:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15334:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15326:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 591,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 589,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "15348:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15348:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15326:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 584,
												"id": 592,
												"nodeType": "Return",
												"src": "15319:40:0"
											}
										]
									},
									"documentation": null,
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSameSenderReentranted",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15276:2:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 594,
												"src": "15302:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15301:6:0"
									},
									"scope": 633,
									"src": "15241:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "15399:307:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15418:29:0",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 597,
																	"name": "checkSameOriginReentranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "15419:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15419:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e747261637447756172643a206f6e6520626c6f636b2c206f6e652066756e6374696f6e",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15449:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502",
																"typeString": "literal_string \"ContractGuard: one block, one function\""
															},
															"value": "ContractGuard: one block, one function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502",
																"typeString": "literal_string \"ContractGuard: one block, one function\""
															}
														],
														"id": 596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15410:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "15410:80:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15509:29:0",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 604,
																	"name": "checkSameSenderReentranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "15510:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15510:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e747261637447756172643a206f6e6520626c6f636b2c206f6e652066756e6374696f6e",
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15540:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502",
																"typeString": "literal_string \"ContractGuard: one block, one function\""
															},
															"value": "ContractGuard: one block, one function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502",
																"typeString": "literal_string \"ContractGuard: one block, one function\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15501:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15501:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "15501:80:0"
											},
											{
												"id": 610,
												"nodeType": "PlaceholderStatement",
												"src": "15594:1:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 611,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "15608:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 616,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 612,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "15616:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15616:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15608:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 617,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 614,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -26,
																"src": "15630:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15630:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15608:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15643:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "15608:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "15608:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 621,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "15658:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 626,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 622,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "15666:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15666:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15658:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 627,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 624,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15680:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15658:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15694:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "15658:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "15658:40:0"
											}
										]
									},
									"documentation": null,
									"id": 632,
									"name": "onlyOneBlock",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15396:2:0"
									},
									"src": "15375:331:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1079,
							"src": "15009:700:0"
						},
						{
							"id": 634,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "15749:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644
							],
							"name": "IZapper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "84767627",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "zapTokenToLP",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 643,
												"src": "15821:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 643,
												"src": "15836:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 643,
												"src": "15852:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15820:44:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15873:0:0"
									},
									"scope": 644,
									"src": "15799:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1079,
							"src": "15774:103:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 645,
										"name": "ContractGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 633,
										"src": "15902:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ContractGuard_$633",
											"typeString": "contract ContractGuard"
										}
									},
									"id": 646,
									"nodeType": "InheritanceSpecifier",
									"src": "15902:13:0"
								}
							],
							"contractDependencies": [
								633
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1078,
							"linearizedBaseContracts": [
								1078,
								633
							],
							"name": "SuperZap",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 649,
									"libraryName": {
										"contractScope": null,
										"id": 647,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 559,
										"src": "15929:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$559",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "15923:27:0",
									"typeName": {
										"contractScope": null,
										"id": 648,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "15943:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 652,
									"libraryName": {
										"contractScope": null,
										"id": 650,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 335,
										"src": "15962:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$335",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "15956:26:0",
									"typeName": {
										"id": 651,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15974:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 655,
									"libraryName": {
										"contractScope": null,
										"id": 653,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 272,
										"src": "15994:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$272",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "15988:27:0",
									"typeName": {
										"id": 654,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "16007:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a7a21712",
									"id": 657,
									"mutability": "mutable",
									"name": "zapper",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1078,
									"src": "16023:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IZapper_$644",
										"typeString": "contract IZapper"
									},
									"typeName": {
										"contractScope": null,
										"id": 656,
										"name": "IZapper",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 644,
										"src": "16023:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IZapper_$644",
											"typeString": "contract IZapper"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "741aa610",
									"id": 659,
									"mutability": "mutable",
									"name": "fudge",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1078,
									"src": "16051:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 658,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "16051:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9b5fd07",
									"id": 661,
									"mutability": "mutable",
									"name": "straw",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1078,
									"src": "16077:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 660,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "16077:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1c15716b",
									"id": 663,
									"mutability": "mutable",
									"name": "fudgePair",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1078,
									"src": "16103:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 662,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "16103:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "984b163e",
									"id": 665,
									"mutability": "mutable",
									"name": "strawPair",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1078,
									"src": "16133:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 664,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "16133:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "570ca735",
									"id": 667,
									"mutability": "mutable",
									"name": "operator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1078,
									"src": "16163:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 666,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16163:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0318d7e",
									"id": 669,
									"mutability": "mutable",
									"name": "minStraw",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1078,
									"src": "16193:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 668,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "16193:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "02c426a8",
									"id": 671,
									"mutability": "mutable",
									"name": "minFudge",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1078,
									"src": "16223:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 670,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "16223:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "16363:407:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 684,
														"name": "zapper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "16374:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IZapper_$644",
															"typeString": "contract IZapper"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 686,
																"name": "_zapper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "16391:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 685,
															"name": "IZapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "16383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IZapper_$644_$",
																"typeString": "type(contract IZapper)"
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16383:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IZapper_$644",
															"typeString": "contract IZapper"
														}
													},
													"src": "16374:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IZapper_$644",
														"typeString": "contract IZapper"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "16374:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 690,
														"name": "fudge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "16410:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 692,
																"name": "_fudge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "16425:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 691,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "16418:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16418:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "16410:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "16410:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 696,
														"name": "straw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "16443:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 698,
																"name": "_straw",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "16458:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 697,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "16451:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16451:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "16443:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "16443:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 702,
														"name": "fudgePair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "16476:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 704,
																"name": "_fudgePair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "16495:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 703,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "16488:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16488:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "16476:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "16476:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 708,
														"name": "strawPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "16517:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 710,
																"name": "_strawPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "16536:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 709,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "16529:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16529:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "16517:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "16517:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 714,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "16558:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 715,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "16569:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16569:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "16558:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "16558:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 719,
														"name": "minStraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "16590:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_500000000000000_by_1",
															"typeString": "int_const 500000000000000"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "302e30303035",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16601:6:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_2000",
																"typeString": "rational_const 1 / 2000"
															},
															"value": "0.0005"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31653138",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16610:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "16601:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000000000000_by_1",
															"typeString": "int_const 500000000000000"
														}
													},
													"src": "16590:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "16590:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 725,
														"name": "minFudge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "16625:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31653138",
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16636:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "16625:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "16625:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 734,
																	"name": "zapper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "16675:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IZapper_$644",
																		"typeString": "contract IZapper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IZapper_$644",
																		"typeString": "contract IZapper"
																	}
																],
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16667:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 732,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16667:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16667:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16689:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 737,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "16689:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 736,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -27,
																	"src": "16684:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16684:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16684:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 729,
															"name": "fudge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "16653:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 46,
														"src": "16653:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16653:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "16653:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 748,
																	"name": "zapper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "16735:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IZapper_$644",
																		"typeString": "contract IZapper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IZapper_$644",
																		"typeString": "contract IZapper"
																	}
																],
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 746,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16727:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16727:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16749:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 751,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "16749:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 750,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -27,
																	"src": "16744:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16744:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16744:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 743,
															"name": "straw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "16713:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 46,
														"src": "16713:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16713:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "16713:49:0"
											}
										]
									},
									"documentation": null,
									"id": 758,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "_zapper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "16267:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "_fudge",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "16284:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "_straw",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "16300:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "_fudgePair",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "16316:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "_strawPair",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "16336:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16266:89:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16363:0:0"
									},
									"scope": 1078,
									"src": "16255:515:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "16802:102:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 761,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "16821:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 762,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "16833:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16833:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16821:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53757065725a61703a2063616c6c6572206973206e6f7420746865206f70657261746f72",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16845:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40960c214819ead63fefdd8daacedc8ff37ea1cb3d93ededabce0e8931268929",
																"typeString": "literal_string \"SuperZap: caller is not the operator\""
															},
															"value": "SuperZap: caller is not the operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40960c214819ead63fefdd8daacedc8ff37ea1cb3d93ededabce0e8931268929",
																"typeString": "literal_string \"SuperZap: caller is not the operator\""
															}
														],
														"id": 760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16813:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "16813:71:0"
											},
											{
												"id": 768,
												"nodeType": "PlaceholderStatement",
												"src": "16895:1:0"
											}
										]
									},
									"documentation": null,
									"id": 770,
									"name": "onlyOperator",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16799:2:0"
									},
									"src": "16778:126:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "16989:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 779,
														"name": "minStraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "17000:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 780,
														"name": "_minStraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "17011:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17000:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "17000:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 783,
														"name": "minFudge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "17031:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 784,
														"name": "_minFudge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "17042:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17031:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "17031:20:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4d4af36f",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 777,
											"modifierName": {
												"argumentTypes": null,
												"id": 776,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 770,
												"src": "16976:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16976:12:0"
										}
									],
									"name": "setMins",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "_minStraw",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "16929:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "_minFudge",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "16948:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16928:38:0"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16989:0:0"
									},
									"scope": 1078,
									"src": "16912:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "17127:76:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 801,
																	"name": "zapper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "17168:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IZapper_$644",
																		"typeString": "contract IZapper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IZapper_$644",
																		"typeString": "contract IZapper"
																	}
																],
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17160:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 799,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17160:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17160:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17182:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 804,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "17182:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 803,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -27,
																	"src": "17177:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17177:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17177:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 796,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "17145:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 795,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "17138:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17138:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 46,
														"src": "17138:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17138:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "17138:57:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "85499cfb",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 793,
											"modifierName": {
												"argumentTypes": null,
												"id": 792,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 770,
												"src": "17114:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17114:12:0"
										}
									],
									"name": "approveZapper",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "17090:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17089:15:0"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17127:0:0"
									},
									"scope": 1078,
									"src": "17067:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "17266:215:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 818,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "17281:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17298:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 819,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17290:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17290:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "17281:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 849,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "17459:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperZap_$1078",
																				"typeString": "contract SuperZap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperZap_$1078",
																				"typeString": "contract SuperZap"
																			}
																		],
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17451:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 847,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17451:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17451:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17451:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 843,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "17430:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "17430:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17422:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17422:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17422:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17422:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256)"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17422:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 853,
													"nodeType": "ExpressionStatement",
													"src": "17422:51:0"
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "17277:196:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 828,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "17342:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17342:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 836,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "17386:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SuperZap_$1078",
																					"typeString": "contract SuperZap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SuperZap_$1078",
																					"typeString": "contract SuperZap"
																				}
																			],
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17378:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 834,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17378:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17378:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 831,
																				"name": "asset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 813,
																				"src": "17361:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 830,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "17354:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17354:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "17354:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17354:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 825,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "17322:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 824,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "17315:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17315:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "safeTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 365,
															"src": "17315:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																"typeString": "function (contract IERC20,address,uint256)"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17315:78:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 840,
													"nodeType": "ExpressionStatement",
													"src": "17315:78:0"
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "51cff8d9",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 816,
											"modifierName": {
												"argumentTypes": null,
												"id": 815,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 770,
												"src": "17253:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17253:12:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "asset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 856,
												"src": "17229:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17228:15:0"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17266:0:0"
									},
									"scope": 1078,
									"src": "17211:270:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "17567:90:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 865,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "17585:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 868,
																	"name": "fudge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "17601:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17593:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17593:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17593:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "17585:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 874,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "17631:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 875,
															"name": "minStraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "17641:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17631:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "17585:64:0",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 871,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "17610:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 872,
															"name": "minFudge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "17620:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17610:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 864,
												"id": 878,
												"nodeType": "Return",
												"src": "17578:71:0"
											}
										]
									},
									"documentation": null,
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkMin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 880,
												"src": "17508:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 880,
												"src": "17522:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17507:30:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 880,
												"src": "17561:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17561:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17560:6:0"
									},
									"scope": 1078,
									"src": "17489:168:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "17776:1448:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 894,
																"name": "percentFudgeLP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "17795:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17813:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "17795:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c69642046554447452d4441492d4c502070657263656e74",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17818:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f817e79664d1b30d0a97433e6bc420998f2598888e24105bbbc12a27545a3b25",
																"typeString": "literal_string \"Invalid FUDGE-DAI-LP percent\""
															},
															"value": "Invalid FUDGE-DAI-LP percent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f817e79664d1b30d0a97433e6bc420998f2598888e24105bbbc12a27545a3b25",
																"typeString": "literal_string \"Invalid FUDGE-DAI-LP percent\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17787:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "17787:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 905,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "17891:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "17891:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 902,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 882,
																				"src": "17875:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 901,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "17868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17868:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "17868:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17868:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 908,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "17906:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17868:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17914:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17860:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17860:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "17860:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 917,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "17978:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17978:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 921,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "17998:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SuperZap_$1078",
																		"typeString": "contract SuperZap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SuperZap_$1078",
																		"typeString": "contract SuperZap"
																	}
																],
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17990:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 919,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17990:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17990:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 923,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "18005:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 914,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "17955:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 913,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "17948:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17948:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 390,
														"src": "17948:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17948:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "17948:64:0"
											},
											{
												"assignments": [
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "amountFudgePair",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1076,
														"src": "18025:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 926,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18025:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 928,
															"name": "percentFudgeLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "18051:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "313030",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18068:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "18051:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 938,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "18112:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18051:67:0",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18105:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 933,
																		"name": "percentFudgeLP",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "18085:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 931,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "18074:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 185,
																	"src": "18074:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18074:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 202,
															"src": "18074:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18074:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18025:93:0"
											},
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "amountStrawPair",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1076,
														"src": "18129:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 941,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 945,
															"name": "amountFudgePair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "18166:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 943,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "18155:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 122,
														"src": "18155:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18155:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18129:53:0"
											},
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "prevFudgeLP",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1076,
														"src": "18195:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 954,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "18245:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SuperZap_$1078",
																		"typeString": "contract SuperZap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SuperZap_$1078",
																		"typeString": "contract SuperZap"
																	}
																],
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18237:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 952,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18237:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18237:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 950,
															"name": "fudgePair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "18217:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "18217:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18217:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18195:56:0"
											},
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "prevStrawLP",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1076,
														"src": "18262:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 967,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 964,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "18312:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SuperZap_$1078",
																		"typeString": "contract SuperZap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SuperZap_$1078",
																		"typeString": "contract SuperZap"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18304:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18304:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18304:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 960,
															"name": "strawPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "18284:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "18284:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18284:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18262:56:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 969,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "18353:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 970,
															"name": "amountFudgePair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "18359:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "_checkMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "18343:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) view returns (bool)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18343:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "18472:81:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 988,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "18513:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "18513:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 990,
																		"name": "amountFudgePair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "18525:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 985,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 882,
																				"src": "18494:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 984,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "18487:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18487:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 365,
																	"src": "18487:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18487:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 992,
															"nodeType": "ExpressionStatement",
															"src": "18487:54:0"
														}
													]
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "18339:214:0",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "18377:89:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 975,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "18412:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 976,
																		"name": "amountFudgePair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "18418:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 979,
																				"name": "fudgePair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 663,
																				"src": "18443:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18435:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18435:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18435:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 972,
																		"name": "zapper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "18392:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IZapper_$644",
																			"typeString": "contract IZapper"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "zapTokenToLP",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 643,
																	"src": "18392:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) external"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18392:62:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "ExpressionStatement",
															"src": "18392:62:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 996,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "18577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 997,
															"name": "amountStrawPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "18583:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 995,
														"name": "_checkMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "18567:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) view returns (bool)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18567:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "18696:81:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1015,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "18737:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "18737:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1017,
																		"name": "amountStrawPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "18749:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1012,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 882,
																				"src": "18718:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1011,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "18711:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18711:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 365,
																	"src": "18711:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18711:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "ExpressionStatement",
															"src": "18711:54:0"
														}
													]
												},
												"id": 1021,
												"nodeType": "IfStatement",
												"src": "18563:214:0",
												"trueBody": {
													"id": 1010,
													"nodeType": "Block",
													"src": "18601:89:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1002,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "18636:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1003,
																		"name": "amountStrawPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "18642:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1006,
																				"name": "strawPair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "18667:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18659:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1004,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18659:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18659:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 999,
																		"name": "zapper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "18616:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IZapper_$644",
																			"typeString": "contract IZapper"
																		}
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "zapTokenToLP",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 643,
																	"src": "18616:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) external"
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18616:62:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1009,
															"nodeType": "ExpressionStatement",
															"src": "18616:62:0"
														}
													]
												}
											},
											{
												"assignments": [
													1023
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "zappedFudgeLP",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1076,
														"src": "18789:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1022,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18789:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1034,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1032,
															"name": "prevFudgeLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "18852:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1028,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "18841:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperZap_$1078",
																				"typeString": "contract SuperZap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperZap_$1078",
																				"typeString": "contract SuperZap"
																			}
																		],
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18833:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1026,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18833:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18833:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "fudgePair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "18813:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 16,
																"src": "18813:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18813:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 122,
														"src": "18813:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18813:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18789:75:0"
											},
											{
												"assignments": [
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "zappedStrawLP",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1076,
														"src": "18875:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1045,
															"name": "prevStrawLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "18938:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1041,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "18927:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SuperZap_$1078",
																				"typeString": "contract SuperZap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SuperZap_$1078",
																				"typeString": "contract SuperZap"
																			}
																		],
																		"id": 1040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18919:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1039,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18919:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18919:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1037,
																	"name": "strawPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "18899:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 16,
																"src": "18899:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18899:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 122,
														"src": "18899:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18899:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18875:75:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1048,
														"name": "zappedFudgeLP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "18975:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18991:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18975:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "18971:86:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1054,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "19030:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "19030:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"argumentTypes": null,
																"id": 1056,
																"name": "zappedFudgeLP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "19043:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1051,
																"name": "fudgePair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "19007:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "safeTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 365,
															"src": "19007:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																"typeString": "function (contract IERC20,address,uint256)"
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19007:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1058,
													"nodeType": "ExpressionStatement",
													"src": "19007:50:0"
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1060,
														"name": "zappedStrawLP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "19072:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19088:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19072:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1071,
												"nodeType": "IfStatement",
												"src": "19068:86:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1066,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "19127:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "19127:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"argumentTypes": null,
																"id": 1068,
																"name": "zappedStrawLP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "19140:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1063,
																"name": "strawPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "19104:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "safeTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 365,
															"src": "19104:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																"typeString": "function (contract IERC20,address,uint256)"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19104:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1070,
													"nodeType": "ExpressionStatement",
													"src": "19104:50:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 1072,
															"name": "zappedFudgeLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "19187:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1073,
															"name": "zappedStrawLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "19202:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1074,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "19186:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 892,
												"id": 1075,
												"nodeType": "Return",
												"src": "19179:37:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "620b2c73",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "zapStrategy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "17686:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "17700:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "percentFudgeLP",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "17716:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17685:54:0"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "17758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "17767:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17757:18:0"
									},
									"scope": 1078,
									"src": "17665:1559:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1079,
							"src": "15881:3346:0"
						}
					],
					"src": "238:18989:0"
				},
				"id": 0
			}
		}
	}
}